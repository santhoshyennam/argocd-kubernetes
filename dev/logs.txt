* 
* ==> Audit <==
* |---------|--------------------------------|----------|--------|---------|---------------------|---------------------|
| Command |              Args              | Profile  |  User  | Version |     Start Time      |      End Time       |
|---------|--------------------------------|----------|--------|---------|---------------------|---------------------|
| start   |                                | minikube | yennam | v1.30.1 | 28 Apr 23 21:20 EDT | 28 Apr 23 21:21 EDT |
| service | mongo-express-service          | minikube | yennam | v1.30.1 | 28 Apr 23 21:39 EDT |                     |
| start   | --driver=qemu                  | minikube | yennam | v1.30.1 | 28 Apr 23 21:39 EDT |                     |
| start   | --driver qemu --network        | minikube | yennam | v1.30.1 | 28 Apr 23 21:40 EDT |                     |
|         | socket_vmnet                   |          |        |         |                     |                     |
|---------|--------------------------------|----------|--------|---------|---------------------|---------------------|

* 
* ==> Last Start <==
* Log file created at: 2023/04/28 21:40:26
Running on machine: santhosh
Binary: Built with gc go1.20.2 for darwin/arm64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0428 21:40:26.511888   59661 out.go:296] Setting OutFile to fd 1 ...
I0428 21:40:26.511980   59661 out.go:348] isatty.IsTerminal(1) = true
I0428 21:40:26.511982   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:40:26.511984   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:40:26.512037   59661 root.go:336] Updating PATH: /Users/yennam/.minikube/bin
W0428 21:40:26.512100   59661 root.go:312] Error reading config file at /Users/yennam/.minikube/config/config.json: open /Users/yennam/.minikube/config/config.json: no such file or directory
I0428 21:40:26.512263   59661 out.go:303] Setting JSON to false
I0428 21:40:26.530663   59661 start.go:125] hostinfo: {"hostname":"santhosh","uptime":199188,"bootTime":1682533238,"procs":498,"os":"darwin","platform":"darwin","platformFamily":"Standalone Workstation","platformVersion":"13.2.1","kernelVersion":"22.3.0","kernelArch":"arm64","virtualizationSystem":"","virtualizationRole":"","hostId":"7053240f-7066-53eb-af4e-aefbdb5e7ce8"}
W0428 21:40:26.530736   59661 start.go:133] gopshost.Virtualization returned error: not implemented yet
I0428 21:40:26.535147   59661 out.go:177] üòÑ  minikube v1.30.1 on Darwin 13.2.1 (arm64)
I0428 21:40:26.541188   59661 notify.go:220] Checking for updates...
I0428 21:40:26.541377   59661 config.go:182] Loaded profile config "minikube": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.26.3
I0428 21:40:26.541601   59661 driver.go:375] Setting default libvirt URI to qemu:///system
I0428 21:40:26.548102   59661 out.go:177] ‚ú®  Using the qemu2 driver based on existing profile
I0428 21:40:26.550122   59661 start.go:295] selected driver: qemu2
I0428 21:40:26.550125   59661 start.go:870] validating driver "qemu2" against &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube/iso/minikube-v1.30.1-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:56655 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.26.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:10.0.2.15 Port:8443 KubernetesVersion:v1.26.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network:builtin Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP:}
I0428 21:40:26.550168   59661 start.go:881] status for qemu2: {Installed:true Healthy:true Running:true NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0428 21:40:26.550233   59661 cni.go:84] Creating CNI manager for ""
I0428 21:40:26.550237   59661 cni.go:157] "qemu2" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0428 21:40:26.550241   59661 start_flags.go:319] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube/iso/minikube-v1.30.1-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:56655 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.26.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:10.0.2.15 Port:8443 KubernetesVersion:v1.26.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP:}
I0428 21:40:26.550292   59661 iso.go:125] acquiring lock: {Name:mka16bdaed6d0bf78c019db42259ed7564a6a9c4 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0428 21:40:26.554159   59661 out.go:177] üëç  Starting control plane node minikube in cluster minikube
I0428 21:40:26.557131   59661 preload.go:132] Checking if preload exists for k8s version v1.26.3 and runtime docker
I0428 21:40:26.557150   59661 preload.go:148] Found local preload: /Users/yennam/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.26.3-docker-overlay2-arm64.tar.lz4
I0428 21:40:26.557154   59661 cache.go:57] Caching tarball of preloaded images
I0428 21:40:26.557201   59661 preload.go:174] Found /Users/yennam/.minikube/cache/preloaded-tarball/preloaded-images-k8s-v18-v1.26.3-docker-overlay2-arm64.tar.lz4 in cache, skipping download
I0428 21:40:26.557205   59661 cache.go:60] Finished verifying existence of preloaded tar for  v1.26.3 on docker
I0428 21:40:26.557239   59661 profile.go:148] Saving config to /Users/yennam/.minikube/profiles/minikube/config.json ...
I0428 21:40:26.557582   59661 cache.go:193] Successfully downloaded all kic artifacts
I0428 21:40:26.557587   59661 start.go:364] acquiring machines lock for minikube: {Name:mk4436e70bf2ffc963bdfb67d3eaf86f33f14a02 Clock:{} Delay:500ms Timeout:13m0s Cancel:<nil>}
I0428 21:40:26.557611   59661 start.go:368] acquired machines lock for "minikube" in 21.208¬µs
I0428 21:40:26.557616   59661 start.go:96] Skipping create...Using existing machine configuration
I0428 21:40:26.557618   59661 fix.go:55] fixHost starting: 
I0428 21:40:26.558196   59661 fix.go:103] recreateIfNeeded on minikube: state=Running err=<nil>
W0428 21:40:26.558201   59661 fix.go:129] unexpected machine state, will restart: <nil>
I0428 21:40:26.563123   59661 out.go:177] üèÉ  Updating the running qemu2 "minikube" VM ...
I0428 21:40:26.566112   59661 machine.go:88] provisioning docker machine ...
I0428 21:40:26.566120   59661 buildroot.go:166] provisioning hostname "minikube"
I0428 21:40:26.566141   59661 main.go:141] libmachine: Using SSH client type: native
I0428 21:40:26.566360   59661 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102611a20] 0x102614400 <nil>  [] 0s} localhost 56638 <nil> <nil>}
I0428 21:40:26.566364   59661 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0428 21:40:26.617467   59661 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0428 21:40:26.617504   59661 main.go:141] libmachine: Using SSH client type: native
I0428 21:40:26.617726   59661 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102611a20] 0x102614400 <nil>  [] 0s} localhost 56638 <nil> <nil>}
I0428 21:40:26.617731   59661 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0428 21:40:26.664645   59661 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0428 21:40:26.664650   59661 buildroot.go:172] set auth options {CertDir:/Users/yennam/.minikube CaCertPath:/Users/yennam/.minikube/certs/ca.pem CaPrivateKeyPath:/Users/yennam/.minikube/certs/ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:/Users/yennam/.minikube/machines/server.pem ServerKeyPath:/Users/yennam/.minikube/machines/server-key.pem ClientKeyPath:/Users/yennam/.minikube/certs/key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:/Users/yennam/.minikube/certs/cert.pem ServerCertSANs:[] StorePath:/Users/yennam/.minikube}
I0428 21:40:26.664663   59661 buildroot.go:174] setting up certificates
I0428 21:40:26.664667   59661 provision.go:83] configureAuth start
I0428 21:40:26.664669   59661 provision.go:138] copyHostCerts
I0428 21:40:26.664721   59661 exec_runner.go:144] found /Users/yennam/.minikube/ca.pem, removing ...
I0428 21:40:26.664724   59661 exec_runner.go:207] rm: /Users/yennam/.minikube/ca.pem
I0428 21:40:26.664818   59661 exec_runner.go:151] cp: /Users/yennam/.minikube/certs/ca.pem --> /Users/yennam/.minikube/ca.pem (1078 bytes)
I0428 21:40:26.664968   59661 exec_runner.go:144] found /Users/yennam/.minikube/cert.pem, removing ...
I0428 21:40:26.664969   59661 exec_runner.go:207] rm: /Users/yennam/.minikube/cert.pem
I0428 21:40:26.665014   59661 exec_runner.go:151] cp: /Users/yennam/.minikube/certs/cert.pem --> /Users/yennam/.minikube/cert.pem (1119 bytes)
I0428 21:40:26.665095   59661 exec_runner.go:144] found /Users/yennam/.minikube/key.pem, removing ...
I0428 21:40:26.665097   59661 exec_runner.go:207] rm: /Users/yennam/.minikube/key.pem
I0428 21:40:26.665142   59661 exec_runner.go:151] cp: /Users/yennam/.minikube/certs/key.pem --> /Users/yennam/.minikube/key.pem (1675 bytes)
I0428 21:40:26.665200   59661 provision.go:112] generating server cert: /Users/yennam/.minikube/machines/server.pem ca-key=/Users/yennam/.minikube/certs/ca.pem private-key=/Users/yennam/.minikube/certs/ca-key.pem org=yennam.minikube san=[127.0.0.1 localhost localhost 127.0.0.1 minikube minikube]
I0428 21:40:26.813299   59661 provision.go:172] copyRemoteCerts
I0428 21:40:26.813360   59661 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0428 21:40:26.813366   59661 sshutil.go:53] new ssh client: &{IP:localhost Port:56638 SSHKeyPath:/Users/yennam/.minikube/machines/minikube/id_rsa Username:docker}
I0428 21:40:26.838770   59661 ssh_runner.go:362] scp /Users/yennam/.minikube/certs/ca.pem --> /etc/docker/ca.pem (1078 bytes)
I0428 21:40:26.848518   59661 ssh_runner.go:362] scp /Users/yennam/.minikube/machines/server.pem --> /etc/docker/server.pem (1208 bytes)
I0428 21:40:26.854078   59661 ssh_runner.go:362] scp /Users/yennam/.minikube/machines/server-key.pem --> /etc/docker/server-key.pem (1675 bytes)
I0428 21:40:26.860619   59661 provision.go:86] duration metric: configureAuth took 195.953542ms
I0428 21:40:26.860623   59661 buildroot.go:189] setting minikube options for container-runtime
I0428 21:40:26.860708   59661 config.go:182] Loaded profile config "minikube": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.26.3
I0428 21:40:26.860739   59661 main.go:141] libmachine: Using SSH client type: native
I0428 21:40:26.860937   59661 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102611a20] 0x102614400 <nil>  [] 0s} localhost 56638 <nil> <nil>}
I0428 21:40:26.860941   59661 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0428 21:40:26.908123   59661 main.go:141] libmachine: SSH cmd err, output: <nil>: tmpfs

I0428 21:40:26.908126   59661 buildroot.go:70] root file system type: tmpfs
I0428 21:40:26.908179   59661 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0428 21:40:26.908201   59661 main.go:141] libmachine: Using SSH client type: native
I0428 21:40:26.908400   59661 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102611a20] 0x102614400 <nil>  [] 0s} localhost 56638 <nil> <nil>}
I0428 21:40:26.908433   59661 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network.target  minikube-automount.service docker.socket
Requires= minikube-automount.service docker.socket 
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=qemu2 --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0428 21:40:26.959415   59661 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network.target  minikube-automount.service docker.socket
Requires= minikube-automount.service docker.socket 
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=qemu2 --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0428 21:40:26.959469   59661 main.go:141] libmachine: Using SSH client type: native
I0428 21:40:26.959699   59661 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102611a20] 0x102614400 <nil>  [] 0s} localhost 56638 <nil> <nil>}
I0428 21:40:26.959706   59661 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0428 21:40:27.008786   59661 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0428 21:40:27.008794   59661 machine.go:91] provisioned docker machine in 442.689875ms
I0428 21:40:27.008799   59661 start.go:300] post-start starting for "minikube" (driver="qemu2")
I0428 21:40:27.008802   59661 start.go:328] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0428 21:40:27.008885   59661 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0428 21:40:27.008904   59661 sshutil.go:53] new ssh client: &{IP:localhost Port:56638 SSHKeyPath:/Users/yennam/.minikube/machines/minikube/id_rsa Username:docker}
I0428 21:40:27.035598   59661 ssh_runner.go:195] Run: cat /etc/os-release
I0428 21:40:27.037040   59661 info.go:137] Remote host: Buildroot 2021.02.12
I0428 21:40:27.037046   59661 filesync.go:126] Scanning /Users/yennam/.minikube/addons for local assets ...
I0428 21:40:27.037128   59661 filesync.go:126] Scanning /Users/yennam/.minikube/files for local assets ...
I0428 21:40:27.037155   59661 start.go:303] post-start completed in 28.354416ms
I0428 21:40:27.037158   59661 fix.go:57] fixHost completed within 479.55275ms
I0428 21:40:27.037182   59661 main.go:141] libmachine: Using SSH client type: native
I0428 21:40:27.037424   59661 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0x102611a20] 0x102614400 <nil>  [] 0s} localhost 56638 <nil> <nil>}
I0428 21:40:27.037427   59661 main.go:141] libmachine: About to run SSH command:
date +%!s(MISSING).%!N(MISSING)
I0428 21:40:27.087474   59661 main.go:141] libmachine: SSH cmd err, output: <nil>: 1682732427.255610140

I0428 21:40:27.087480   59661 fix.go:207] guest clock: 1682732427.255610140
I0428 21:40:27.087483   59661 fix.go:220] Guest: 2023-04-28 21:40:27.25561014 -0400 EDT Remote: 2023-04-28 21:40:27.037159 -0400 EDT m=+0.549912334 (delta=218.45114ms)
I0428 21:40:27.087495   59661 fix.go:191] guest clock delta is within tolerance: 218.45114ms
I0428 21:40:27.087497   59661 start.go:83] releasing machines lock for "minikube", held for 529.896709ms
I0428 21:40:27.087586   59661 ssh_runner.go:195] Run: cat /version.json
I0428 21:40:27.087592   59661 sshutil.go:53] new ssh client: &{IP:localhost Port:56638 SSHKeyPath:/Users/yennam/.minikube/machines/minikube/id_rsa Username:docker}
I0428 21:40:27.087602   59661 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0428 21:40:27.087622   59661 sshutil.go:53] new ssh client: &{IP:localhost Port:56638 SSHKeyPath:/Users/yennam/.minikube/machines/minikube/id_rsa Username:docker}
W0428 21:40:27.088298   59661 sshutil.go:64] dial failure (will retry): dial tcp 127.0.0.1:56638: connect: connection reset by peer
I0428 21:40:27.088322   59661 retry.go:31] will retry after 273.938611ms: dial tcp 127.0.0.1:56638: connect: connection reset by peer
I0428 21:40:27.111711   59661 ssh_runner.go:195] Run: systemctl --version
I0428 21:40:27.113371   59661 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
W0428 21:40:27.114839   59661 cni.go:208] loopback cni configuration skipped: "/etc/cni/net.d/*loopback.conf*" not found
I0428 21:40:27.114881   59661 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0428 21:40:27.117253   59661 cni.go:258] no active bridge cni configs found in "/etc/cni/net.d" - nothing to disable
I0428 21:40:27.117257   59661 preload.go:132] Checking if preload exists for k8s version v1.26.3 and runtime docker
I0428 21:40:27.117295   59661 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0428 21:40:27.124618   59661 docker.go:639] Got preloaded images: -- stdout --
mongo:latest
registry.k8s.io/kube-apiserver:v1.26.3
registry.k8s.io/kube-proxy:v1.26.3
registry.k8s.io/kube-controller-manager:v1.26.3
registry.k8s.io/kube-scheduler:v1.26.3
mongo-express:latest
registry.k8s.io/etcd:3.5.6-0
registry.k8s.io/pause:3.9
registry.k8s.io/coredns/coredns:v1.9.3
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0428 21:40:27.124623   59661 docker.go:569] Images already preloaded, skipping extraction
I0428 21:40:27.124627   59661 start.go:481] detecting cgroup driver to use...
I0428 21:40:27.124712   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0428 21:40:27.129416   59661 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0428 21:40:27.132008   59661 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0428 21:40:27.134941   59661 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I0428 21:40:27.134979   59661 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0428 21:40:27.137675   59661 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0428 21:40:27.140171   59661 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0428 21:40:27.143042   59661 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0428 21:40:27.145860   59661 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0428 21:40:27.148981   59661 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0428 21:40:27.151796   59661 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0428 21:40:27.154732   59661 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0428 21:40:27.157087   59661 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0428 21:40:27.254902   59661 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0428 21:40:27.260302   59661 start.go:481] detecting cgroup driver to use...
I0428 21:40:27.260345   59661 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0428 21:40:27.269112   59661 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service containerd
I0428 21:40:27.272803   59661 ssh_runner.go:195] Run: sudo systemctl stop -f containerd
I0428 21:40:27.277860   59661 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service containerd
I0428 21:40:27.281954   59661 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0428 21:40:27.285617   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0428 21:40:27.290108   59661 ssh_runner.go:195] Run: which cri-dockerd
I0428 21:40:27.291189   59661 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0428 21:40:27.293684   59661 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0428 21:40:27.297824   59661 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0428 21:40:27.360952   59661 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0428 21:40:27.452809   59661 docker.go:538] configuring docker to use "cgroupfs" as cgroup driver...
I0428 21:40:27.452815   59661 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (144 bytes)
I0428 21:40:27.457304   59661 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0428 21:40:27.548763   59661 ssh_runner.go:195] Run: sudo systemctl restart docker
I0428 21:40:43.995146   59661 ssh_runner.go:235] Completed: sudo systemctl restart docker: (16.446781916s)
I0428 21:40:43.995250   59661 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0428 21:40:44.098459   59661 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0428 21:40:44.199669   59661 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0428 21:40:44.346946   59661 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0428 21:40:44.487577   59661 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0428 21:40:44.508966   59661 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0428 21:40:44.637544   59661 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I0428 21:40:44.694590   59661 start.go:528] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0428 21:40:44.694653   59661 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0428 21:40:44.696492   59661 start.go:549] Will wait 60s for crictl version
I0428 21:40:44.696567   59661 ssh_runner.go:195] Run: which crictl
I0428 21:40:44.699321   59661 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0428 21:40:44.719118   59661 start.go:565] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  20.10.23
RuntimeApiVersion:  v1alpha2
I0428 21:40:44.719168   59661 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0428 21:40:44.730030   59661 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0428 21:40:44.757626   59661 out.go:204] üê≥  Preparing Kubernetes v1.26.3 on Docker 20.10.23 ...
I0428 21:40:44.757720   59661 ssh_runner.go:195] Run: grep 10.0.2.2	host.minikube.internal$ /etc/hosts
I0428 21:40:44.759065   59661 preload.go:132] Checking if preload exists for k8s version v1.26.3 and runtime docker
I0428 21:40:44.759089   59661 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0428 21:40:44.771419   59661 docker.go:639] Got preloaded images: -- stdout --
mongo:latest
registry.k8s.io/kube-apiserver:v1.26.3
registry.k8s.io/kube-proxy:v1.26.3
registry.k8s.io/kube-controller-manager:v1.26.3
registry.k8s.io/kube-scheduler:v1.26.3
mongo-express:latest
registry.k8s.io/etcd:3.5.6-0
registry.k8s.io/pause:3.9
registry.k8s.io/coredns/coredns:v1.9.3
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0428 21:40:44.771433   59661 docker.go:569] Images already preloaded, skipping extraction
I0428 21:40:44.771472   59661 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0428 21:40:44.787299   59661 docker.go:639] Got preloaded images: -- stdout --
mongo:latest
registry.k8s.io/kube-apiserver:v1.26.3
registry.k8s.io/kube-proxy:v1.26.3
registry.k8s.io/kube-controller-manager:v1.26.3
registry.k8s.io/kube-scheduler:v1.26.3
mongo-express:latest
registry.k8s.io/etcd:3.5.6-0
registry.k8s.io/pause:3.9
registry.k8s.io/coredns/coredns:v1.9.3
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0428 21:40:44.787306   59661 cache_images.go:84] Images are preloaded, skipping loading
I0428 21:40:44.787352   59661 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0428 21:40:44.808690   59661 cni.go:84] Creating CNI manager for ""
I0428 21:40:44.808695   59661 cni.go:157] "qemu2" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0428 21:40:44.808702   59661 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0428 21:40:44.808709   59661 kubeadm.go:172] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:10.0.2.15 APIServerPort:8443 KubernetesVersion:v1.26.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "10.0.2.15"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:10.0.2.15 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m]}
I0428 21:40:44.808788   59661 kubeadm.go:177] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 10.0.2.15
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: /var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 10.0.2.15
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "10.0.2.15"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.26.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0428 21:40:44.808838   59661 kubeadm.go:968] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.26.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=10.0.2.15

[Install]
 config:
{KubernetesVersion:v1.26.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0428 21:40:44.808880   59661 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.26.3
I0428 21:40:44.813168   59661 binaries.go:44] Found k8s binaries, skipping transfer
I0428 21:40:44.813236   59661 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0428 21:40:44.815501   59661 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (366 bytes)
I0428 21:40:44.819760   59661 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0428 21:40:44.823881   59661 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2075 bytes)
I0428 21:40:44.828074   59661 ssh_runner.go:195] Run: grep 10.0.2.15	control-plane.minikube.internal$ /etc/hosts
I0428 21:40:44.829354   59661 certs.go:56] Setting up /Users/yennam/.minikube/profiles/minikube for IP: 10.0.2.15
I0428 21:40:44.829363   59661 certs.go:186] acquiring lock for shared ca certs: {Name:mkf4ff7b9c735c76e6140dc87ac920e218f0b7d7 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0428 21:40:44.829500   59661 certs.go:195] skipping minikubeCA CA generation: /Users/yennam/.minikube/ca.key
I0428 21:40:44.829549   59661 certs.go:195] skipping proxyClientCA CA generation: /Users/yennam/.minikube/proxy-client-ca.key
I0428 21:40:44.829608   59661 certs.go:311] skipping minikube-user signed cert generation: /Users/yennam/.minikube/profiles/minikube/client.key
I0428 21:40:44.829652   59661 certs.go:311] skipping minikube signed cert generation: /Users/yennam/.minikube/profiles/minikube/apiserver.key.49504c3e
I0428 21:40:44.829688   59661 certs.go:311] skipping aggregator signed cert generation: /Users/yennam/.minikube/profiles/minikube/proxy-client.key
I0428 21:40:44.829828   59661 certs.go:401] found cert: /Users/yennam/.minikube/certs/Users/yennam/.minikube/certs/ca-key.pem (1679 bytes)
I0428 21:40:44.829853   59661 certs.go:401] found cert: /Users/yennam/.minikube/certs/Users/yennam/.minikube/certs/ca.pem (1078 bytes)
I0428 21:40:44.829874   59661 certs.go:401] found cert: /Users/yennam/.minikube/certs/Users/yennam/.minikube/certs/cert.pem (1119 bytes)
I0428 21:40:44.829895   59661 certs.go:401] found cert: /Users/yennam/.minikube/certs/Users/yennam/.minikube/certs/key.pem (1675 bytes)
I0428 21:40:44.830248   59661 ssh_runner.go:362] scp /Users/yennam/.minikube/profiles/minikube/apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0428 21:40:44.836949   59661 ssh_runner.go:362] scp /Users/yennam/.minikube/profiles/minikube/apiserver.key --> /var/lib/minikube/certs/apiserver.key (1675 bytes)
I0428 21:40:44.842836   59661 ssh_runner.go:362] scp /Users/yennam/.minikube/profiles/minikube/proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0428 21:40:44.848885   59661 ssh_runner.go:362] scp /Users/yennam/.minikube/profiles/minikube/proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1675 bytes)
I0428 21:40:44.854933   59661 ssh_runner.go:362] scp /Users/yennam/.minikube/ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0428 21:40:44.861269   59661 ssh_runner.go:362] scp /Users/yennam/.minikube/ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0428 21:40:44.866985   59661 ssh_runner.go:362] scp /Users/yennam/.minikube/proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0428 21:40:44.872966   59661 ssh_runner.go:362] scp /Users/yennam/.minikube/proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1679 bytes)
I0428 21:40:44.878929   59661 ssh_runner.go:362] scp /Users/yennam/.minikube/ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0428 21:40:44.884797   59661 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0428 21:40:44.889106   59661 ssh_runner.go:195] Run: openssl version
I0428 21:40:44.890715   59661 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0428 21:40:44.893564   59661 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0428 21:40:44.895000   59661 certs.go:444] hashing: -rw-r--r-- 1 root root 1111 Apr 29 01:21 /usr/share/ca-certificates/minikubeCA.pem
I0428 21:40:44.895025   59661 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0428 21:40:44.896698   59661 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0428 21:40:44.899255   59661 kubeadm.go:401] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO:https://storage.googleapis.com/minikube/iso/minikube-v1.30.1-arm64.iso KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.39@sha256:bf2d9f1e9d837d8deea073611d2605405b6be904647d97ebd9b12045ddfe1106 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:qemu2 HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:56655 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.26.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:10.0.2.15 Port:8443 KubernetesVersion:v1.26.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[default-storageclass:true storage-provisioner:true] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network:socket_vmnet Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:/Users:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP:}
I0428 21:40:44.899317   59661 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0428 21:40:44.906664   59661 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0428 21:40:44.909174   59661 host.go:66] Checking if "minikube" exists ...
I0428 21:40:44.909856   59661 main.go:141] libmachine: Using SSH client type: external
I0428 21:40:44.909878   59661 main.go:141] libmachine: Using SSH private key: /Users/yennam/.minikube/machines/minikube/id_rsa (-rw-------)
I0428 21:40:44.909891   59661 main.go:141] libmachine: &{[-F /dev/null -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none -o LogLevel=quiet -o PasswordAuthentication=no -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null docker@localhost -o IdentitiesOnly=yes -i /Users/yennam/.minikube/machines/minikube/id_rsa -p 56638] /opt/homebrew/bin/ssh <nil>}
I0428 21:40:44.909911   59661 main.go:141] libmachine: /opt/homebrew/bin/ssh -F /dev/null -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none -o LogLevel=quiet -o PasswordAuthentication=no -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null docker@localhost -o IdentitiesOnly=yes -i /Users/yennam/.minikube/machines/minikube/id_rsa -p 56638 -f -NTL 56655:localhost:8443
I0428 21:40:44.945852   59661 kubeadm.go:416] found existing configuration files, will attempt cluster restart
I0428 21:40:44.945911   59661 kubeadm.go:633] restartCluster start
I0428 21:40:44.945960   59661 ssh_runner.go:195] Run: sudo test -d /data/minikube
I0428 21:40:44.948599   59661 kubeadm.go:127] /data/minikube skipping compat symlinks: sudo test -d /data/minikube: Process exited with status 1
stdout:

stderr:
I0428 21:40:44.948930   59661 kubeconfig.go:92] found "minikube" server: "https://localhost:56851"
I0428 21:40:44.948946   59661 kubeconfig.go:135] verify returned: got: localhost:56851, want: 10.0.2.15:8443
I0428 21:40:44.950453   59661 lock.go:35] WriteFile acquiring /Users/yennam/.kube/config: {Name:mk50b97345908c98c0cbf93dfe6cea305071e008 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0428 21:40:44.951749   59661 ssh_runner.go:195] Run: sudo diff -u /var/tmp/minikube/kubeadm.yaml /var/tmp/minikube/kubeadm.yaml.new
I0428 21:40:44.954225   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:44.954246   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:44.957533   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:45.458581   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:45.458697   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:45.462963   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:45.958623   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:45.958863   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:45.964810   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:46.458587   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:46.458828   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:46.468442   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:46.958538   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:46.958630   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:46.963889   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:47.458627   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:47.458988   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:47.470906   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:47.958510   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:47.958604   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:47.962915   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:48.458480   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:48.458558   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:48.462696   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:48.958516   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:48.958626   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:48.963357   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:49.458502   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:49.458713   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:49.467587   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:49.958571   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:49.958898   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:49.973750   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:50.458632   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:50.459188   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:50.479014   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:50.958537   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:50.958933   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:50.972534   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:51.458515   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:51.458892   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:51.473414   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:51.958457   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:51.958932   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:51.974491   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:52.458397   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:52.458610   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:52.469154   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:52.958426   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:52.958831   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:52.974686   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:53.458450   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:53.458794   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:53.471972   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:53.958426   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:53.958904   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:53.977606   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:54.457616   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:54.457744   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:54.461939   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:54.957431   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:54.957554   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:54.961961   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:54.961964   59661 api_server.go:165] Checking apiserver status ...
I0428 21:40:54.962008   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
W0428 21:40:54.965299   59661 api_server.go:169] stopped: unable to get apiserver pid: sudo pgrep -xnf kube-apiserver.*minikube.*: Process exited with status 1
stdout:

stderr:
I0428 21:40:54.965305   59661 kubeadm.go:608] needs reconfigure: apiserver error: timed out waiting for the condition
I0428 21:40:54.965308   59661 kubeadm.go:1120] stopping kube-system containers ...
I0428 21:40:54.965346   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0428 21:40:54.981992   59661 docker.go:465] Stopping containers: [3909f24813d5 e15b231b2f7a 2d656520edeb 2c818517fb84 7700eca277f6 c4bc7504d216 229d3f908160 8ed5b8f89991 808555c01478 2ef8437e85c9 7cd3133b5578 0077bd43c15a 0def5b472d14 779ce1719c4d 48f012e27607 0e4abb3ac51e 124377e4a13c 4312e90fb5b5 707418572b56 b479f09a2582 0bd06d61b96b f61ad040068e d6b4d69b91d5 15e5d531fcf1 c8292b52c396 6ce919a88f1d a415c7cc73f1 4b9a46ed7272 953264059cee b3bf21586aa4 9a4d52714510 ef8a89f8a1df ee45770f3913 e912ba283039 4e0efa3050d2 040ce211089e d6f42d6a9b43 cb62bbe047c4]
I0428 21:40:54.982052   59661 ssh_runner.go:195] Run: docker stop 3909f24813d5 e15b231b2f7a 2d656520edeb 2c818517fb84 7700eca277f6 c4bc7504d216 229d3f908160 8ed5b8f89991 808555c01478 2ef8437e85c9 7cd3133b5578 0077bd43c15a 0def5b472d14 779ce1719c4d 48f012e27607 0e4abb3ac51e 124377e4a13c 4312e90fb5b5 707418572b56 b479f09a2582 0bd06d61b96b f61ad040068e d6b4d69b91d5 15e5d531fcf1 c8292b52c396 6ce919a88f1d a415c7cc73f1 4b9a46ed7272 953264059cee b3bf21586aa4 9a4d52714510 ef8a89f8a1df ee45770f3913 e912ba283039 4e0efa3050d2 040ce211089e d6f42d6a9b43 cb62bbe047c4
I0428 21:41:00.069749   59661 ssh_runner.go:235] Completed: docker stop 3909f24813d5 e15b231b2f7a 2d656520edeb 2c818517fb84 7700eca277f6 c4bc7504d216 229d3f908160 8ed5b8f89991 808555c01478 2ef8437e85c9 7cd3133b5578 0077bd43c15a 0def5b472d14 779ce1719c4d 48f012e27607 0e4abb3ac51e 124377e4a13c 4312e90fb5b5 707418572b56 b479f09a2582 0bd06d61b96b f61ad040068e d6b4d69b91d5 15e5d531fcf1 c8292b52c396 6ce919a88f1d a415c7cc73f1 4b9a46ed7272 953264059cee b3bf21586aa4 9a4d52714510 ef8a89f8a1df ee45770f3913 e912ba283039 4e0efa3050d2 040ce211089e d6f42d6a9b43 cb62bbe047c4: (5.087807458s)
I0428 21:41:00.069865   59661 ssh_runner.go:195] Run: sudo systemctl stop kubelet
I0428 21:41:00.131389   59661 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0428 21:41:00.135049   59661 kubeadm.go:155] found existing configuration files:
-rw------- 1 root root 5639 Apr 29 01:21 /etc/kubernetes/admin.conf
-rw------- 1 root root 5653 Apr 29 01:21 /etc/kubernetes/controller-manager.conf
-rw------- 1 root root 1971 Apr 29 01:21 /etc/kubernetes/kubelet.conf
-rw------- 1 root root 5597 Apr 29 01:21 /etc/kubernetes/scheduler.conf

I0428 21:41:00.135102   59661 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/admin.conf
I0428 21:41:00.138171   59661 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/kubelet.conf
I0428 21:41:00.141141   59661 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf
I0428 21:41:00.143756   59661 kubeadm.go:166] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/controller-manager.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/controller-manager.conf: Process exited with status 1
stdout:

stderr:
I0428 21:41:00.143780   59661 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/controller-manager.conf
I0428 21:41:00.146748   59661 ssh_runner.go:195] Run: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf
I0428 21:41:00.149260   59661 kubeadm.go:166] "https://control-plane.minikube.internal:8443" may not be in /etc/kubernetes/scheduler.conf - will remove: sudo grep https://control-plane.minikube.internal:8443 /etc/kubernetes/scheduler.conf: Process exited with status 1
stdout:

stderr:
I0428 21:41:00.149287   59661 ssh_runner.go:195] Run: sudo rm -f /etc/kubernetes/scheduler.conf
I0428 21:41:00.151826   59661 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0428 21:41:00.154953   59661 kubeadm.go:710] reconfiguring cluster from /var/tmp/minikube/kubeadm.yaml
I0428 21:41:00.154955   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init phase certs all --config /var/tmp/minikube/kubeadm.yaml"
I0428 21:41:00.178021   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init phase kubeconfig all --config /var/tmp/minikube/kubeadm.yaml"
I0428 21:41:00.641459   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init phase kubelet-start --config /var/tmp/minikube/kubeadm.yaml"
I0428 21:41:00.751348   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init phase control-plane all --config /var/tmp/minikube/kubeadm.yaml"
I0428 21:41:00.784364   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init phase etcd local --config /var/tmp/minikube/kubeadm.yaml"
I0428 21:41:00.816834   59661 api_server.go:51] waiting for apiserver process to appear ...
I0428 21:41:00.816914   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0428 21:41:01.322191   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0428 21:41:01.822165   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0428 21:41:01.826831   59661 api_server.go:71] duration metric: took 1.010022959s to wait for apiserver process to appear ...
I0428 21:41:01.826839   59661 api_server.go:87] waiting for apiserver healthz status ...
I0428 21:41:01.826843   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:41:06.827944   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:41:07.329043   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:41:08.378234   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": dial tcp 10.0.2.15:8443: connect: connection refused
I0428 21:41:08.829146   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:41:13.829713   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:41:14.328897   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:41:19.329263   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:41:19.828764   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:41:20.085271   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": dial tcp 10.0.2.15:8443: connect: connection refused
I0428 21:41:20.328706   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:41:25.328798   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:41:25.828576   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:41:30.828766   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:41:31.328469   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:41:36.328798   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:41:36.828302   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:41:39.851167   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": dial tcp 10.0.2.15:8443: connect: connection refused
I0428 21:41:40.328209   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:41:45.328544   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:41:45.828075   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:41:49.931401   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": dial tcp 10.0.2.15:8443: connect: connection refused
I0428 21:41:50.327955   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:41:55.328158   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:41:55.827811   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:42:00.828106   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:42:01.327701   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:42:06.327970   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:42:06.827728   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:42:06.844794   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:42:06.844854   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:42:06.854187   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:42:06.854221   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:42:06.862259   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:42:06.862299   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:42:06.869998   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:42:06.870050   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:42:06.878164   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:42:06.878195   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:42:06.886122   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:42:06.886157   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:42:06.893707   59661 logs.go:277] 0 containers: []
W0428 21:42:06.893709   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:42:06.893744   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:42:06.900304   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:42:06.900310   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:42:06.900313   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:42:06.909047   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:42:06.909050   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:42:06.916578   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:42:06.916581   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:42:06.923626   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:42:06.923629   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:42:06.959219   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:42:06.959222   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:42:06.999047   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:42:06.999051   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:42:07.009493   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:42:07.009496   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:42:07.020590   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:42:07.020593   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:42:07.027518   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:42:07.027522   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:42:07.051029   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:42:07.051032   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:42:07.058917   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:42:07.058920   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:42:07.073643   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:42:07.073646   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:42:07.085533   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:42:07.085536   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:42:07.092480   59661 logs.go:123] Gathering logs for container status ...
I0428 21:42:07.092484   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:42:07.104472   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:42:07.104476   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:42:07.108648   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:42:07.108651   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:42:07.118413   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:42:07.118420   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:42:07.131188   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:42:07.131193   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:42:07.140145   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:42:07.140149   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:42:09.648175   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:42:14.649424   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:42:14.827555   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:42:14.841737   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:42:14.841788   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:42:14.852287   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:42:14.852332   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:42:14.859819   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:42:14.859855   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:42:14.867387   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:42:14.867431   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:42:14.874493   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:42:14.874528   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:42:14.892034   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:42:14.892076   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:42:14.898424   59661 logs.go:277] 0 containers: []
W0428 21:42:14.898427   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:42:14.898449   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:42:14.904889   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:42:14.904896   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:42:14.904900   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:42:14.940375   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:42:14.940379   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:42:14.948284   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:42:14.948288   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:42:14.955305   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:42:14.955308   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:42:14.967456   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:42:14.967459   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:42:14.977130   59661 logs.go:123] Gathering logs for container status ...
I0428 21:42:14.977134   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:42:14.989322   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:42:14.989325   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:42:14.993512   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:42:14.993516   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:42:15.005008   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:42:15.005010   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:42:15.042580   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:42:15.042585   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:42:15.051959   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:42:15.051961   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:42:15.058928   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:42:15.058931   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:42:15.074051   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:42:15.074054   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:42:15.081474   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:42:15.081477   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:42:15.089715   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:42:15.089719   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:42:15.096524   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:42:15.096528   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:42:15.106719   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:42:15.106723   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:42:15.115390   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:42:15.115398   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:42:15.122180   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:42:15.122183   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:42:17.646928   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:42:22.648172   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:42:22.827372   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:42:22.841371   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:42:22.841420   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:42:22.854481   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:42:22.854516   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:42:22.862469   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:42:22.862510   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:42:22.869541   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:42:22.869570   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:42:22.876435   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:42:22.876468   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:42:22.884247   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:42:22.884275   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:42:22.890700   59661 logs.go:277] 0 containers: []
W0428 21:42:22.890702   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:42:22.890724   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:42:22.897128   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:42:22.897133   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:42:22.897136   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:42:22.907193   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:42:22.907196   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:42:22.913937   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:42:22.913944   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:42:22.921943   59661 logs.go:123] Gathering logs for container status ...
I0428 21:42:22.921947   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:42:22.934671   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:42:22.934674   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:42:22.949254   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:42:22.949258   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:42:22.957701   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:42:22.957706   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:42:22.966765   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:42:22.966771   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:42:22.976649   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:42:22.976652   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:42:22.983536   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:42:22.983539   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:42:22.992490   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:42:22.992493   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:42:23.001667   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:42:23.001670   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:42:23.008896   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:42:23.008900   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:42:23.016918   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:42:23.016923   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:42:23.024047   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:42:23.024053   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:42:23.049209   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:42:23.049212   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:42:23.087257   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:42:23.087262   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:42:23.091469   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:42:23.091472   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:42:23.127599   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:42:23.127603   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:42:25.643646   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:42:30.644820   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:42:30.826890   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:42:30.843875   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:42:30.843937   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:42:30.854092   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:42:30.854123   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:42:30.862177   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:42:30.862205   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:42:30.869710   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:42:30.869743   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:42:30.876980   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:42:30.877007   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:42:30.884049   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:42:30.884074   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:42:30.891728   59661 logs.go:277] 0 containers: []
W0428 21:42:30.891731   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:42:30.891760   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:42:30.898124   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:42:30.898131   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:42:30.898134   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:42:30.923831   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:42:30.923834   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:42:30.962076   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:42:30.962088   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:42:30.969214   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:42:30.969217   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:42:30.976228   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:42:30.976231   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:42:31.012722   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:42:31.012728   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:42:31.022777   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:42:31.022780   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:42:31.030263   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:42:31.030266   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:42:31.044904   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:42:31.044908   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:42:31.051805   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:42:31.051808   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:42:31.065546   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:42:31.065549   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:42:31.072577   59661 logs.go:123] Gathering logs for container status ...
I0428 21:42:31.072581   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:42:31.084432   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:42:31.084436   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:42:31.088478   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:42:31.088480   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:42:31.098013   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:42:31.098017   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:42:31.110139   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:42:31.110142   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:42:31.118041   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:42:31.118043   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:42:31.124858   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:42:31.124861   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:42:31.133970   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:42:31.133973   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:42:33.644904   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:42:37.671666   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": dial tcp 10.0.2.15:8443: connect: connection refused
I0428 21:42:37.826973   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:42:37.838779   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:42:37.838831   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:42:37.847319   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:42:37.847356   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:42:37.854864   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:42:37.854892   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:42:37.861948   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:42:37.861982   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:42:37.868983   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:42:37.869015   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:42:37.876164   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:42:37.876193   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:42:37.882475   59661 logs.go:277] 0 containers: []
W0428 21:42:37.882478   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:42:37.882505   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:42:37.888883   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:42:37.888889   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:42:37.888892   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:42:37.898405   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:42:37.898408   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:42:37.907511   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:42:37.907515   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:42:37.914771   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:42:37.914775   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:42:37.921521   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:42:37.921523   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:42:37.925655   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:42:37.925657   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:42:37.962846   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:42:37.962851   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:42:37.970605   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:42:37.970608   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:42:37.977564   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:42:37.977567   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:42:37.984417   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:42:37.984420   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:42:37.991800   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:42:37.991804   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:42:38.016396   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:42:38.016399   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:42:38.054276   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:42:38.054280   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:42:38.065120   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:42:38.065124   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:42:38.074787   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:42:38.074791   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:42:38.089731   59661 logs.go:123] Gathering logs for container status ...
I0428 21:42:38.089734   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:42:38.102475   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:42:38.102478   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:42:38.112637   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:42:38.112641   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:42:38.119848   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:42:38.119852   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:42:40.631854   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:42:45.632989   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:42:45.826722   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:42:45.841448   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:42:45.841514   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:42:45.849735   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:42:45.849800   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:42:45.858220   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:42:45.858257   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:42:45.866171   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:42:45.866204   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:42:45.873150   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:42:45.873180   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:42:45.879826   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:42:45.879856   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:42:45.886426   59661 logs.go:277] 0 containers: []
W0428 21:42:45.886428   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:42:45.886452   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:42:45.892614   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:42:45.892620   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:42:45.892623   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:42:45.909918   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:42:45.909929   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:42:45.917242   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:42:45.917246   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:42:45.953838   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:42:45.953843   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:42:45.963231   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:42:45.963235   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:42:45.971713   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:42:45.971717   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:42:45.996118   59661 logs.go:123] Gathering logs for container status ...
I0428 21:42:45.996121   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:42:46.008327   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:42:46.008331   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:42:46.015520   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:42:46.015524   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:42:46.022203   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:42:46.022207   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:42:46.057712   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:42:46.057716   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:42:46.066949   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:42:46.066952   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:42:46.076931   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:42:46.076936   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:42:46.083959   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:42:46.083962   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:42:46.099522   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:42:46.099526   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:42:46.106545   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:42:46.106548   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:42:46.113512   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:42:46.113514   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:42:46.119978   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:42:46.119982   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:42:46.124087   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:42:46.124090   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:42:48.638565   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:42:53.639718   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:42:53.826420   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:42:53.835922   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:42:53.835963   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:42:53.845389   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:42:53.845422   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:42:53.852514   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:42:53.852552   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:42:53.859245   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:42:53.859275   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:42:53.865422   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:42:53.865449   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:42:53.871950   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:42:53.871978   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:42:53.877978   59661 logs.go:277] 0 containers: []
W0428 21:42:53.877981   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:42:53.878003   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:42:53.884163   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:42:53.884168   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:42:53.884171   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:42:53.890713   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:42:53.890716   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:42:53.894938   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:42:53.894941   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:42:53.909489   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:42:53.909492   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:42:53.921629   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:42:53.921632   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:42:53.928756   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:42:53.928759   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:42:53.938766   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:42:53.938770   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:42:53.946313   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:42:53.946316   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:42:53.954168   59661 logs.go:123] Gathering logs for container status ...
I0428 21:42:53.954171   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:42:53.967694   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:42:53.967699   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:42:54.005352   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:42:54.005357   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:42:54.042427   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:42:54.042431   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:42:54.053831   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:42:54.053835   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:42:54.063394   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:42:54.063397   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:42:54.071046   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:42:54.071050   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:42:54.094037   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:42:54.094040   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:42:54.103341   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:42:54.103344   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:42:54.110314   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:42:54.110317   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:42:54.117240   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:42:54.117244   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:42:56.624929   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:43:01.626172   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:43:01.826378   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:43:01.837530   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:43:01.837606   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:43:01.849715   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:43:01.849754   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:43:01.862775   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:43:01.862824   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:43:01.869747   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:43:01.869779   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:43:01.876666   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:43:01.876702   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:43:01.883217   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:43:01.883245   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:43:01.889370   59661 logs.go:277] 0 containers: []
W0428 21:43:01.889373   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:43:01.889405   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:43:01.895758   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:43:01.895764   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:43:01.895766   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:43:01.933261   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:43:01.933265   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:43:01.995157   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:43:01.995163   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:43:02.003581   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:43:02.003586   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:43:02.011737   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:43:02.011740   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:43:02.022240   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:43:02.022243   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:43:02.034579   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:43:02.034582   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:43:02.060362   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:43:02.060365   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:43:02.067530   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:43:02.067533   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:43:02.077055   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:43:02.077057   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:43:02.084156   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:43:02.084159   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:43:02.091092   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:43:02.091099   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:43:02.098848   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:43:02.098852   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:43:02.115510   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:43:02.115514   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:43:02.122578   59661 logs.go:123] Gathering logs for container status ...
I0428 21:43:02.122581   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:43:02.134403   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:43:02.134408   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:43:02.138779   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:43:02.138782   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:43:02.148563   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:43:02.148566   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:43:02.158116   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:43:02.158118   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:43:04.668424   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:43:09.669063   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:43:09.826151   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:43:09.836774   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:43:09.836826   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:43:09.844411   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:43:09.844444   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:43:09.855619   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:43:09.855656   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:43:09.862538   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:43:09.862563   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:43:09.875407   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:43:09.875464   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:43:09.884187   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:43:09.884233   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:43:09.889911   59661 logs.go:277] 0 containers: []
W0428 21:43:09.889914   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:43:09.889943   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:43:09.899812   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:43:09.899826   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:43:09.899829   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:43:09.940569   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:43:09.940575   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:43:09.950305   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:43:09.950312   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:43:09.957710   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:43:09.957712   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:43:09.964678   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:43:09.964681   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:43:09.971575   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:43:09.971578   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:43:09.978872   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:43:09.978876   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:43:09.985449   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:43:09.985452   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:43:09.989760   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:43:09.989763   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:43:09.998991   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:43:09.998994   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:43:10.009325   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:43:10.009327   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:43:10.020043   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:43:10.020048   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:43:10.028890   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:43:10.028894   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:43:10.043796   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:43:10.043798   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:43:10.068385   59661 logs.go:123] Gathering logs for container status ...
I0428 21:43:10.068391   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:43:10.080335   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:43:10.080339   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:43:10.117844   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:43:10.117848   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:43:10.125459   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:43:10.125462   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:43:10.140951   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:43:10.140954   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:43:12.648962   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:43:17.650121   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:43:17.826285   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:43:17.841436   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:43:17.841493   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:43:17.851200   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:43:17.851242   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:43:17.859851   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:43:17.859888   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:43:17.867517   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:43:17.867545   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:43:17.875155   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:43:17.875185   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:43:17.882894   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:43:17.882922   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:43:17.889549   59661 logs.go:277] 0 containers: []
W0428 21:43:17.889552   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:43:17.889579   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:43:17.896963   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:43:17.896969   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:43:17.896971   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:43:17.937847   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:43:17.937852   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:43:17.945624   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:43:17.945627   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:43:17.952624   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:43:17.952628   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:43:17.964903   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:43:17.964906   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:43:17.971907   59661 logs.go:123] Gathering logs for container status ...
I0428 21:43:17.971911   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:43:17.983911   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:43:17.983916   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:43:18.021460   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:43:18.021463   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:43:18.025818   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:43:18.025821   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:43:18.036218   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:43:18.036221   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:43:18.045372   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:43:18.045376   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:43:18.053983   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:43:18.053987   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:43:18.063559   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:43:18.063566   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:43:18.070488   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:43:18.070491   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:43:18.077388   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:43:18.077391   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:43:18.088235   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:43:18.088238   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:43:18.098064   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:43:18.098066   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:43:18.112816   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:43:18.112819   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:43:18.119696   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:43:18.119698   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:43:20.643944   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:43:25.645125   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:43:25.825393   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:43:25.837640   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:43:25.837693   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:43:25.845966   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:43:25.846002   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:43:25.854072   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:43:25.854100   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:43:25.861769   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:43:25.861804   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:43:25.868626   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:43:25.868657   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:43:25.876195   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:43:25.876220   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:43:25.882735   59661 logs.go:277] 0 containers: []
W0428 21:43:25.882737   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:43:25.882766   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:43:25.889108   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:43:25.889115   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:43:25.889118   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:43:25.901832   59661 logs.go:123] Gathering logs for container status ...
I0428 21:43:25.901834   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:43:25.914401   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:43:25.914404   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:43:25.918353   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:43:25.918356   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:43:25.955681   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:43:25.955687   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:43:25.971492   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:43:25.971498   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:43:25.979370   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:43:25.979374   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:43:25.987386   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:43:25.987390   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:43:25.994451   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:43:25.994454   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:43:26.001649   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:43:26.001652   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:43:26.014880   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:43:26.014883   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:43:26.052607   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:43:26.052613   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:43:26.061610   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:43:26.061614   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:43:26.068468   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:43:26.068471   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:43:26.075359   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:43:26.075364   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:43:26.088296   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:43:26.088300   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:43:26.097439   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:43:26.097442   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:43:26.106773   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:43:26.106776   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:43:26.113764   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:43:26.113767   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:43:28.640081   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:43:33.641293   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:43:33.825536   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:43:33.838558   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:43:33.838618   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:43:33.848843   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:43:33.848877   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:43:33.857304   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:43:33.857330   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:43:33.864926   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:43:33.864961   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:43:33.873205   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:43:33.873225   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:43:33.880425   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:43:33.880450   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:43:33.887190   59661 logs.go:277] 0 containers: []
W0428 21:43:33.887193   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:43:33.887224   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:43:33.893608   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:43:33.893614   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:43:33.893617   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:43:33.900886   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:43:33.900892   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:43:33.907786   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:43:33.907791   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:43:33.914245   59661 logs.go:123] Gathering logs for container status ...
I0428 21:43:33.914248   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:43:33.927791   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:43:33.927795   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:43:33.939203   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:43:33.939207   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:43:33.950558   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:43:33.950563   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:43:33.957783   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:43:33.957786   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:43:33.961918   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:43:33.961921   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:43:33.971015   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:43:33.971018   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:43:33.978359   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:43:33.978361   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:43:34.013675   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:43:34.013678   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:43:34.022781   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:43:34.022784   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:43:34.033423   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:43:34.033427   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:43:34.040750   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:43:34.040754   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:43:34.047795   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:43:34.047799   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:43:34.062354   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:43:34.062357   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:43:34.074256   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:43:34.074258   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:43:34.097801   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:43:34.097804   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:43:36.636619   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:43:41.637922   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:43:41.825348   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:43:41.837081   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:43:41.837127   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:43:41.845910   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:43:41.845949   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:43:41.853639   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:43:41.853670   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:43:41.861227   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:43:41.861256   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:43:41.868327   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:43:41.868355   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:43:41.875011   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:43:41.875039   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:43:41.881703   59661 logs.go:277] 0 containers: []
W0428 21:43:41.881706   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:43:41.881732   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:43:41.890819   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:43:41.890824   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:43:41.890827   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:43:41.895376   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:43:41.895380   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:43:41.903126   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:43:41.903130   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:43:41.914469   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:43:41.914472   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:43:41.922049   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:43:41.922052   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:43:41.930576   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:43:41.930578   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:43:41.937012   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:43:41.937015   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:43:41.975285   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:43:41.975289   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:43:42.014078   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:43:42.014084   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:43:42.024299   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:43:42.024302   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:43:42.030977   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:43:42.030981   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:43:42.038116   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:43:42.038120   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:43:42.045001   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:43:42.045004   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:43:42.067887   59661 logs.go:123] Gathering logs for container status ...
I0428 21:43:42.067889   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:43:42.081730   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:43:42.081734   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:43:42.091416   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:43:42.091419   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:43:42.100916   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:43:42.100919   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:43:42.116321   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:43:42.116324   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:43:42.123489   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:43:42.123492   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:43:44.636205   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:43:49.637176   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:43:49.825156   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:43:49.841681   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:43:49.841742   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:43:49.852426   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:43:49.852463   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:43:49.861358   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:43:49.861393   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:43:49.869339   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:43:49.869366   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:43:49.876478   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:43:49.876514   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:43:49.883615   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:43:49.883642   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:43:49.891531   59661 logs.go:277] 0 containers: []
W0428 21:43:49.891533   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:43:49.891561   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:43:49.898666   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:43:49.898672   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:43:49.898675   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:43:49.906402   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:43:49.906406   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:43:49.913501   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:43:49.913503   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:43:49.920375   59661 logs.go:123] Gathering logs for container status ...
I0428 21:43:49.920379   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:43:49.932456   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:43:49.932459   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:43:49.941893   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:43:49.941896   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:43:49.979826   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:43:49.979832   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:43:49.990906   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:43:49.990911   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:43:50.000892   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:43:50.000894   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:43:50.008085   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:43:50.008088   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:43:50.015301   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:43:50.015304   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:43:50.019650   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:43:50.019652   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:43:50.028225   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:43:50.028228   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:43:50.044304   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:43:50.044308   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:43:50.056993   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:43:50.056996   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:43:50.064269   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:43:50.064273   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:43:50.071889   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:43:50.071893   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:43:50.109838   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:43:50.109841   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:43:50.135048   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:43:50.135051   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:43:52.646568   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:43:57.647937   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:43:57.825018   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:43:57.838591   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:43:57.838646   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:43:57.848067   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:43:57.848105   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:43:57.857266   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:43:57.857298   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:43:57.865810   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:43:57.865848   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:43:57.873082   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:43:57.873111   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:43:57.880291   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:43:57.880318   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:43:57.887903   59661 logs.go:277] 0 containers: []
W0428 21:43:57.887906   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:43:57.887932   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:43:57.894963   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:43:57.894969   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:43:57.894971   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:43:57.902216   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:43:57.902219   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:43:57.909297   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:43:57.909301   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:43:57.932828   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:43:57.932830   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:43:57.970287   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:43:57.970290   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:43:58.024420   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:43:58.024427   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:43:58.036510   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:43:58.036514   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:43:58.046138   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:43:58.046142   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:43:58.053363   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:43:58.053366   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:43:58.069973   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:43:58.069976   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:43:58.076769   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:43:58.076772   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:43:58.081056   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:43:58.081058   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:43:58.089476   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:43:58.089481   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:43:58.098932   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:43:58.098935   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:43:58.105719   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:43:58.105722   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:43:58.112930   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:43:58.112933   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:43:58.124799   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:43:58.124802   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:43:58.131823   59661 logs.go:123] Gathering logs for container status ...
I0428 21:43:58.131826   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:43:58.143887   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:43:58.143891   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:44:00.653757   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:44:04.674661   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": dial tcp 10.0.2.15:8443: connect: connection refused
I0428 21:44:04.824717   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:44:04.847510   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:44:04.847574   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:44:04.857582   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:44:04.857632   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:44:04.865852   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:44:04.865896   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:44:04.873363   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:44:04.873395   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:44:04.880687   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:44:04.880715   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:44:04.888798   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:44:04.888826   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:44:04.898792   59661 logs.go:277] 0 containers: []
W0428 21:44:04.898795   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:44:04.898819   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:44:04.907312   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:44:04.907318   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:44:04.907321   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:44:04.944357   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:44:04.944362   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:44:04.954512   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:44:04.954514   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:44:04.969787   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:44:04.969791   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:44:04.977137   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:44:04.977140   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:44:04.988813   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:44:04.988816   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:44:05.024577   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:44:05.024580   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:44:05.034492   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:44:05.034496   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:44:05.041852   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:44:05.041855   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:44:05.049650   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:44:05.049656   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:44:05.058967   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:44:05.058972   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:44:05.083865   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:44:05.083868   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:44:05.088080   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:44:05.088083   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:44:05.098140   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:44:05.098144   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:44:05.107464   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:44:05.107467   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:44:05.114288   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:44:05.114292   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:44:05.123091   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:44:05.123094   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:44:05.131523   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:44:05.131527   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:44:05.138508   59661 logs.go:123] Gathering logs for container status ...
I0428 21:44:05.138512   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:44:07.650696   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:44:12.652150   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:44:12.824532   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:44:12.842400   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:44:12.842459   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:44:12.854124   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:44:12.854166   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:44:12.863031   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:44:12.863063   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:44:12.871066   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:44:12.871092   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:44:12.878471   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:44:12.878497   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:44:12.885395   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:44:12.885428   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:44:12.892208   59661 logs.go:277] 0 containers: []
W0428 21:44:12.892211   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:44:12.892235   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:44:12.899032   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:44:12.899037   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:44:12.899040   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:44:12.906831   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:44:12.906835   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:44:12.943815   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:44:12.943819   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:44:12.951310   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:44:12.951314   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:44:12.958689   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:44:12.958692   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:44:12.981884   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:44:12.981887   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:44:12.985948   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:44:12.985953   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:44:12.995837   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:44:12.995840   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:44:13.011369   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:44:13.011373   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:44:13.019053   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:44:13.019057   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:44:13.026606   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:44:13.026609   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:44:13.039463   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:44:13.039466   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:44:13.046427   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:44:13.046431   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:44:13.061613   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:44:13.061617   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:44:13.070946   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:44:13.070949   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:44:13.081436   59661 logs.go:123] Gathering logs for container status ...
I0428 21:44:13.081439   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:44:13.093532   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:44:13.093537   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:44:13.130975   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:44:13.130980   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:44:13.141956   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:44:13.141960   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:44:15.649718   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:44:20.652100   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:44:20.824380   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:44:20.839338   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:44:20.839406   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:44:20.848921   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:44:20.848962   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:44:20.857005   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:44:20.857045   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:44:20.864688   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:44:20.864715   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:44:20.877753   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:44:20.877782   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:44:20.886833   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:44:20.886862   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:44:20.897510   59661 logs.go:277] 0 containers: []
W0428 21:44:20.897513   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:44:20.897536   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:44:20.904160   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:44:20.904165   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:44:20.904168   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:44:20.913276   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:44:20.913279   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:44:20.920237   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:44:20.920240   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:44:20.956297   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:44:20.956301   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:44:20.965967   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:44:20.965970   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:44:20.972600   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:44:20.972602   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:44:20.979603   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:44:20.979606   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:44:20.994688   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:44:20.994691   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:44:21.019493   59661 logs.go:123] Gathering logs for container status ...
I0428 21:44:21.019496   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:44:21.032051   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:44:21.032054   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:44:21.041296   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:44:21.041299   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:44:21.049415   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:44:21.049418   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:44:21.061334   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:44:21.061338   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:44:21.070185   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:44:21.070188   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:44:21.077001   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:44:21.077004   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:44:21.081239   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:44:21.081243   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:44:21.122136   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:44:21.122140   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:44:21.132503   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:44:21.132506   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:44:21.141726   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:44:21.141732   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:44:23.650416   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:44:28.651614   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:44:28.823525   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:44:28.835084   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:44:28.835138   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:44:28.844560   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:44:28.844601   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:44:28.852424   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:44:28.852455   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:44:28.861622   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:44:28.861656   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:44:28.868616   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:44:28.868644   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:44:28.876243   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:44:28.876273   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:44:28.882636   59661 logs.go:277] 0 containers: []
W0428 21:44:28.882640   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:44:28.882663   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:44:28.888910   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:44:28.888915   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:44:28.888918   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:44:28.898270   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:44:28.898273   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:44:28.921579   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:44:28.921583   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:44:28.961099   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:44:28.961104   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:44:28.972010   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:44:28.972013   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:44:28.979409   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:44:28.979425   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:44:28.994753   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:44:28.994770   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:44:29.001498   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:44:29.001501   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:44:29.009476   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:44:29.009479   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:44:29.013527   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:44:29.013532   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:44:29.022644   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:44:29.022647   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:44:29.033050   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:44:29.033053   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:44:29.040789   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:44:29.040793   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:44:29.047619   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:44:29.047623   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:44:29.059889   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:44:29.059894   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:44:29.066825   59661 logs.go:123] Gathering logs for container status ...
I0428 21:44:29.066829   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:44:29.078820   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:44:29.078823   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:44:29.088094   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:44:29.088100   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:44:29.095452   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:44:29.095455   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:44:31.635203   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:44:36.636483   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:44:36.823993   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:44:36.845766   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:44:36.845847   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:44:36.861171   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:44:36.861220   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:44:36.870159   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:44:36.870202   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:44:36.877924   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:44:36.877953   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:44:36.885349   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:44:36.885383   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:44:36.894517   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:44:36.894546   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:44:36.901056   59661 logs.go:277] 0 containers: []
W0428 21:44:36.901059   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:44:36.901087   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:44:36.907531   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:44:36.907537   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:44:36.907539   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:44:36.923443   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:44:36.923446   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:44:36.932488   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:44:36.932498   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:44:36.955601   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:44:36.955606   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:44:36.959754   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:44:36.959758   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:44:36.968720   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:44:36.968723   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:44:36.978059   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:44:36.978062   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:44:36.987652   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:44:36.987655   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:44:36.995555   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:44:36.995558   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:44:37.003529   59661 logs.go:123] Gathering logs for container status ...
I0428 21:44:37.003532   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:44:37.016020   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:44:37.016024   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:44:37.052083   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:44:37.052087   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:44:37.062207   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:44:37.062213   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:44:37.069079   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:44:37.069084   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:44:37.076615   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:44:37.076619   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:44:37.083677   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:44:37.083679   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:44:37.090773   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:44:37.090776   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:44:37.129171   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:44:37.129174   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:44:37.136706   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:44:37.136711   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:44:39.650275   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:44:44.651648   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:44:44.823757   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:44:44.846008   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:44:44.846071   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:44:44.856736   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:44:44.856783   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:44:44.867136   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:44:44.867171   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:44:44.874507   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:44:44.874535   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:44:44.882438   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:44:44.882468   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:44:44.889364   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:44:44.889419   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:44:44.895435   59661 logs.go:277] 0 containers: []
W0428 21:44:44.895439   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:44:44.895473   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:44:44.902176   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:44:44.902182   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:44:44.902185   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:44:44.912048   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:44:44.912051   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:44:44.919120   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:44:44.919124   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:44:44.927862   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:44:44.927865   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:44:44.939225   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:44:44.939228   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:44:44.946257   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:44:44.946261   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:44:44.952933   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:44:44.952936   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:44:44.957059   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:44:44.957062   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:44:44.972363   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:44:44.972366   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:44:44.979017   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:44:44.979021   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:44:44.990662   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:44:44.990674   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:44:44.997555   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:44:44.997558   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:44:45.004120   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:44:45.004124   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:44:45.028909   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:44:45.028914   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:44:45.065627   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:44:45.065633   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:44:45.075385   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:44:45.075390   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:44:45.082767   59661 logs.go:123] Gathering logs for container status ...
I0428 21:44:45.082770   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:44:45.094123   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:44:45.094126   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:44:45.129957   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:44:45.129962   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:44:47.638400   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:44:52.639663   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:44:52.823548   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:44:52.835378   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:44:52.835432   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:44:52.845209   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:44:52.845256   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:44:52.852875   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:44:52.852906   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:44:52.860348   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:44:52.860381   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:44:52.867638   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:44:52.867664   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:44:52.877103   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:44:52.877140   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:44:52.884210   59661 logs.go:277] 0 containers: []
W0428 21:44:52.884213   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:44:52.884236   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:44:52.891421   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:44:52.891427   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:44:52.891430   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:44:52.898235   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:44:52.898238   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:44:52.905200   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:44:52.905206   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:44:52.911987   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:44:52.911991   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:44:52.918883   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:44:52.918887   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:44:52.925789   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:44:52.925792   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:44:52.937802   59661 logs.go:123] Gathering logs for container status ...
I0428 21:44:52.937805   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:44:52.949814   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:44:52.949818   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:44:52.959148   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:44:52.959151   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:44:52.966352   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:44:52.966355   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:44:52.982746   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:44:52.982750   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:44:53.008351   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:44:53.008353   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:44:53.015678   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:44:53.015682   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:44:53.051829   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:44:53.051831   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:44:53.056051   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:44:53.056054   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:44:53.093093   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:44:53.093100   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:44:53.102683   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:44:53.102686   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:44:53.114980   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:44:53.114983   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:44:53.124968   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:44:53.124971   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:44:55.632989   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:45:00.633780   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:45:00.823353   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:45:00.841675   59661 logs.go:277] 2 containers: [4d45176cf1cc 779ce1719c4d]
I0428 21:45:00.841732   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:45:00.850624   59661 logs.go:277] 2 containers: [79d0ab0d5292 0bd06d61b96b]
I0428 21:45:00.850666   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:45:00.857836   59661 logs.go:277] 2 containers: [c7b704eeed86 3909f24813d5]
I0428 21:45:00.857872   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:45:00.867197   59661 logs.go:277] 2 containers: [714202df6e65 2d656520edeb]
I0428 21:45:00.867227   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:45:00.875152   59661 logs.go:277] 2 containers: [a7c5bc05e5f4 7700eca277f6]
I0428 21:45:00.875177   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:45:00.882083   59661 logs.go:277] 2 containers: [75f3345ad093 b479f09a2582]
I0428 21:45:00.882111   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:45:00.888364   59661 logs.go:277] 0 containers: []
W0428 21:45:00.888367   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:45:00.888390   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:45:00.898856   59661 logs.go:277] 2 containers: [33213a19ad54 2c818517fb84]
I0428 21:45:00.898863   59661 logs.go:123] Gathering logs for kube-apiserver [4d45176cf1cc] ...
I0428 21:45:00.898865   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 4d45176cf1cc"
I0428 21:45:00.910832   59661 logs.go:123] Gathering logs for etcd [79d0ab0d5292] ...
I0428 21:45:00.910835   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 79d0ab0d5292"
I0428 21:45:00.920642   59661 logs.go:123] Gathering logs for storage-provisioner [2c818517fb84] ...
I0428 21:45:00.920647   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2c818517fb84"
I0428 21:45:00.928739   59661 logs.go:123] Gathering logs for container status ...
I0428 21:45:00.928743   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:45:00.940980   59661 logs.go:123] Gathering logs for kube-proxy [7700eca277f6] ...
I0428 21:45:00.940983   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 7700eca277f6"
I0428 21:45:00.949143   59661 logs.go:123] Gathering logs for kube-controller-manager [75f3345ad093] ...
I0428 21:45:00.949147   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 75f3345ad093"
I0428 21:45:00.966712   59661 logs.go:123] Gathering logs for storage-provisioner [33213a19ad54] ...
I0428 21:45:00.966716   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 33213a19ad54"
I0428 21:45:00.974269   59661 logs.go:123] Gathering logs for kube-proxy [a7c5bc05e5f4] ...
I0428 21:45:00.974272   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a7c5bc05e5f4"
I0428 21:45:00.981146   59661 logs.go:123] Gathering logs for kube-controller-manager [b479f09a2582] ...
I0428 21:45:00.981149   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b479f09a2582"
I0428 21:45:00.988004   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:45:00.988007   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:45:01.012656   59661 logs.go:123] Gathering logs for coredns [c7b704eeed86] ...
I0428 21:45:01.012660   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 c7b704eeed86"
I0428 21:45:01.021248   59661 logs.go:123] Gathering logs for coredns [3909f24813d5] ...
I0428 21:45:01.021256   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 3909f24813d5"
I0428 21:45:01.030748   59661 logs.go:123] Gathering logs for kube-scheduler [2d656520edeb] ...
I0428 21:45:01.030751   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 2d656520edeb"
I0428 21:45:01.046340   59661 logs.go:123] Gathering logs for kube-apiserver [779ce1719c4d] ...
I0428 21:45:01.046345   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 779ce1719c4d"
I0428 21:45:01.057574   59661 logs.go:123] Gathering logs for etcd [0bd06d61b96b] ...
I0428 21:45:01.057579   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0bd06d61b96b"
I0428 21:45:01.067709   59661 logs.go:123] Gathering logs for kube-scheduler [714202df6e65] ...
I0428 21:45:01.067715   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 714202df6e65"
I0428 21:45:01.075702   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:45:01.075707   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
I0428 21:45:01.111844   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:45:01.111848   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:45:01.116134   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:45:01.116137   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:45:03.653184   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:45:08.654528   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:45:08.654588   59661 kubeadm.go:637] restartCluster took 4m23.715342125s
W0428 21:45:08.654747   59661 out.go:239] ü§¶  Unable to restart cluster, will reset it: apiserver health: apiserver healthz never reported healthy: cluster wait timed out during healthz check
I0428 21:45:08.654806   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force"
I0428 21:45:10.466730   59661 ssh_runner.go:235] Completed: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm reset --cri-socket /var/run/cri-dockerd.sock --force": (1.811955625s)
I0428 21:45:10.466815   59661 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0428 21:45:10.471438   59661 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0428 21:45:10.474039   59661 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0428 21:45:10.476349   59661 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0428 21:45:10.476628   59661 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.26.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem"
I0428 21:45:10.494648   59661 kubeadm.go:322] [init] Using Kubernetes version: v1.26.3
I0428 21:45:10.494771   59661 kubeadm.go:322] [preflight] Running pre-flight checks
I0428 21:45:10.537453   59661 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I0428 21:45:10.537493   59661 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0428 21:45:10.537566   59661 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0428 21:45:10.579168   59661 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0428 21:45:10.585031   59661 out.go:204]     ‚ñ™ Generating certificates and keys ...
I0428 21:45:10.585080   59661 kubeadm.go:322] [certs] Using existing ca certificate authority
I0428 21:45:10.585111   59661 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I0428 21:45:10.585186   59661 kubeadm.go:322] [certs] Using existing apiserver-kubelet-client certificate and key on disk
I0428 21:45:10.585215   59661 kubeadm.go:322] [certs] Using existing front-proxy-ca certificate authority
I0428 21:45:10.585262   59661 kubeadm.go:322] [certs] Using existing front-proxy-client certificate and key on disk
I0428 21:45:10.585299   59661 kubeadm.go:322] [certs] Using existing etcd/ca certificate authority
I0428 21:45:10.585326   59661 kubeadm.go:322] [certs] Using existing etcd/server certificate and key on disk
I0428 21:45:10.585369   59661 kubeadm.go:322] [certs] Using existing etcd/peer certificate and key on disk
I0428 21:45:10.585409   59661 kubeadm.go:322] [certs] Using existing etcd/healthcheck-client certificate and key on disk
I0428 21:45:10.585437   59661 kubeadm.go:322] [certs] Using existing apiserver-etcd-client certificate and key on disk
I0428 21:45:10.585452   59661 kubeadm.go:322] [certs] Using the existing "sa" key
I0428 21:45:10.585479   59661 kubeadm.go:322] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0428 21:45:10.671065   59661 kubeadm.go:322] [kubeconfig] Writing "admin.conf" kubeconfig file
I0428 21:45:10.723736   59661 kubeadm.go:322] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0428 21:45:10.810313   59661 kubeadm.go:322] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0428 21:45:10.880075   59661 kubeadm.go:322] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0428 21:45:10.886413   59661 kubeadm.go:322] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0428 21:45:10.886461   59661 kubeadm.go:322] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0428 21:45:10.886501   59661 kubeadm.go:322] [kubelet-start] Starting the kubelet
I0428 21:45:10.967067   59661 kubeadm.go:322] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0428 21:45:10.968707   59661 out.go:204]     ‚ñ™ Booting up control plane ...
I0428 21:45:10.968755   59661 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0428 21:45:10.971973   59661 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0428 21:45:10.972401   59661 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0428 21:45:10.972731   59661 kubeadm.go:322] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0428 21:45:10.973627   59661 kubeadm.go:322] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
I0428 21:45:14.474455   59661 kubeadm.go:322] [apiclient] All control plane components are healthy after 3.500773 seconds
I0428 21:45:14.474530   59661 kubeadm.go:322] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0428 21:45:14.481862   59661 kubeadm.go:322] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0428 21:45:14.995741   59661 kubeadm.go:322] [upload-certs] Skipping phase. Please see --upload-certs
I0428 21:45:14.995926   59661 kubeadm.go:322] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0428 21:45:15.500683   59661 kubeadm.go:322] [bootstrap-token] Using token: 9d709m.1uufzqb8w37yz4ji
I0428 21:45:15.504255   59661 out.go:204]     ‚ñ™ Configuring RBAC rules ...
I0428 21:45:15.504315   59661 kubeadm.go:322] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0428 21:45:15.505131   59661 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0428 21:45:15.508674   59661 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0428 21:45:15.509890   59661 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0428 21:45:15.512343   59661 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0428 21:45:15.513294   59661 kubeadm.go:322] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0428 21:45:15.516556   59661 kubeadm.go:322] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0428 21:45:15.673432   59661 kubeadm.go:322] [addons] Applied essential addon: CoreDNS
I0428 21:45:15.907681   59661 kubeadm.go:322] [addons] Applied essential addon: kube-proxy
I0428 21:45:15.908108   59661 kubeadm.go:322] 
I0428 21:45:15.908147   59661 kubeadm.go:322] Your Kubernetes control-plane has initialized successfully!
I0428 21:45:15.908149   59661 kubeadm.go:322] 
I0428 21:45:15.908185   59661 kubeadm.go:322] To start using your cluster, you need to run the following as a regular user:
I0428 21:45:15.908187   59661 kubeadm.go:322] 
I0428 21:45:15.908197   59661 kubeadm.go:322]   mkdir -p $HOME/.kube
I0428 21:45:15.908255   59661 kubeadm.go:322]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0428 21:45:15.908290   59661 kubeadm.go:322]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0428 21:45:15.908292   59661 kubeadm.go:322] 
I0428 21:45:15.908319   59661 kubeadm.go:322] Alternatively, if you are the root user, you can run:
I0428 21:45:15.908321   59661 kubeadm.go:322] 
I0428 21:45:15.908353   59661 kubeadm.go:322]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0428 21:45:15.908354   59661 kubeadm.go:322] 
I0428 21:45:15.908384   59661 kubeadm.go:322] You should now deploy a pod network to the cluster.
I0428 21:45:15.908435   59661 kubeadm.go:322] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0428 21:45:15.908498   59661 kubeadm.go:322]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0428 21:45:15.908505   59661 kubeadm.go:322] 
I0428 21:45:15.908577   59661 kubeadm.go:322] You can now join any number of control-plane nodes by copying certificate authorities
I0428 21:45:15.908631   59661 kubeadm.go:322] and service account keys on each node and then running the following as root:
I0428 21:45:15.908633   59661 kubeadm.go:322] 
I0428 21:45:15.908683   59661 kubeadm.go:322]   kubeadm join control-plane.minikube.internal:8443 --token 9d709m.1uufzqb8w37yz4ji \
I0428 21:45:15.908730   59661 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:40c7cdee4638ad9a3c3e956b03d0d04e65c5a3a89d1a01b6602aa5b86410fb57 \
I0428 21:45:15.908738   59661 kubeadm.go:322] 	--control-plane 
I0428 21:45:15.908740   59661 kubeadm.go:322] 
I0428 21:45:15.908792   59661 kubeadm.go:322] Then you can join any number of worker nodes by running the following on each as root:
I0428 21:45:15.908794   59661 kubeadm.go:322] 
I0428 21:45:15.908854   59661 kubeadm.go:322] kubeadm join control-plane.minikube.internal:8443 --token 9d709m.1uufzqb8w37yz4ji \
I0428 21:45:15.908915   59661 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:40c7cdee4638ad9a3c3e956b03d0d04e65c5a3a89d1a01b6602aa5b86410fb57 
I0428 21:45:15.909093   59661 kubeadm.go:322] W0429 01:45:10.666293   32267 initconfiguration.go:119] Usage of CRI endpoints without URL scheme is deprecated and can cause kubelet errors in the future. Automatically prepending scheme "unix" to the "criSocket" with value "/var/run/cri-dockerd.sock". Please update your configuration!
I0428 21:45:15.909147   59661 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0428 21:45:15.909157   59661 cni.go:84] Creating CNI manager for ""
I0428 21:45:15.909177   59661 cni.go:157] "qemu2" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0428 21:45:15.914759   59661 out.go:177] üîó  Configuring bridge CNI (Container Networking Interface) ...
I0428 21:45:15.917946   59661 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0428 21:45:15.921412   59661 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (457 bytes)
I0428 21:45:15.926436   59661 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0428 21:45:15.926567   59661 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.26.3/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0428 21:45:15.926746   59661 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.26.3/kubectl label nodes minikube.k8s.io/version=v1.30.1 minikube.k8s.io/commit=08896fd1dc362c097c925146c4a0d0dac715ace0 minikube.k8s.io/name=minikube minikube.k8s.io/updated_at=2023_04_28T21_45_15_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig
I0428 21:45:15.973752   59661 ops.go:34] apiserver oom_adj: -16
I0428 21:45:15.973768   59661 kubeadm.go:1073] duration metric: took 47.290792ms to wait for elevateKubeSystemPrivileges.
I0428 21:45:15.973786   59661 host.go:66] Checking if "minikube" exists ...
I0428 21:45:15.974712   59661 main.go:141] libmachine: Using SSH client type: external
I0428 21:45:15.974730   59661 main.go:141] libmachine: Using SSH private key: /Users/yennam/.minikube/machines/minikube/id_rsa (-rw-------)
I0428 21:45:15.974743   59661 main.go:141] libmachine: &{[-F /dev/null -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none -o LogLevel=quiet -o PasswordAuthentication=no -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null docker@localhost -o IdentitiesOnly=yes -i /Users/yennam/.minikube/machines/minikube/id_rsa -p 56638] /opt/homebrew/bin/ssh <nil>}
I0428 21:45:15.974753   59661 main.go:141] libmachine: /opt/homebrew/bin/ssh -F /dev/null -o ConnectionAttempts=3 -o ConnectTimeout=10 -o ControlMaster=no -o ControlPath=none -o LogLevel=quiet -o PasswordAuthentication=no -o ServerAliveInterval=60 -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null docker@localhost -o IdentitiesOnly=yes -i /Users/yennam/.minikube/machines/minikube/id_rsa -p 56638 -f -NTL 56655:localhost:8443
I0428 21:45:16.014331   59661 kubeadm.go:403] StartCluster complete in 4m31.121913334s
I0428 21:45:16.014356   59661 settings.go:142] acquiring lock: {Name:mkee055786e7be286f7f07fcbb4f02cbcbdf5eba Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0428 21:45:16.014455   59661 settings.go:150] Updating kubeconfig:  /Users/yennam/.kube/config
I0428 21:45:16.015266   59661 lock.go:35] WriteFile acquiring /Users/yennam/.kube/config: {Name:mk50b97345908c98c0cbf93dfe6cea305071e008 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0428 21:45:16.015443   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0428 21:45:16.015620   59661 addons.go:496] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false istio:false istio-provisioner:false kong:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false volumesnapshots:false]
I0428 21:45:16.015892   59661 addons.go:66] Setting storage-provisioner=true in profile "minikube"
I0428 21:45:16.015890   59661 config.go:182] Loaded profile config "minikube": Driver=qemu2, ContainerRuntime=docker, KubernetesVersion=v1.26.3
I0428 21:45:16.015899   59661 addons.go:228] Setting addon storage-provisioner=true in "minikube"
W0428 21:45:16.015901   59661 addons.go:237] addon storage-provisioner should already be in state true
I0428 21:45:16.015901   59661 addons.go:66] Setting default-storageclass=true in profile "minikube"
I0428 21:45:16.015914   59661 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0428 21:45:16.016126   59661 host.go:66] Checking if "minikube" exists ...
I0428 21:45:16.020784   59661 out.go:177]     ‚ñ™ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0428 21:45:16.023789   59661 addons.go:420] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0428 21:45:16.023792   59661 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0428 21:45:16.023798   59661 sshutil.go:53] new ssh client: &{IP:localhost Port:56638 SSHKeyPath:/Users/yennam/.minikube/machines/minikube/id_rsa Username:docker}
I0428 21:45:16.049399   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           10.0.2.2 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.26.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0428 21:45:16.053746   59661 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.26.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0428 21:45:16.385627   59661 start.go:916] {"host.minikube.internal": 10.0.2.2} host record injected into CoreDNS's ConfigMap
W0428 21:45:46.017954   59661 kapi.go:245] failed rescaling "coredns" deployment in "kube-system" namespace and "minikube" context to 1 replicas: non-retryable failure while getting "coredns" deployment scale: Get "https://10.0.2.15:8443/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale": dial tcp 10.0.2.15:8443: i/o timeout
E0428 21:45:46.017978   59661 start.go:219] Unable to scale down deployment "coredns" in namespace "kube-system" to 1 replica: non-retryable failure while getting "coredns" deployment scale: Get "https://10.0.2.15:8443/apis/apps/v1/namespaces/kube-system/deployments/coredns/scale": dial tcp 10.0.2.15:8443: i/o timeout
I0428 21:45:46.018025   59661 start.go:223] Will wait 6m0s for node &{Name: IP:10.0.2.15 Port:8443 KubernetesVersion:v1.26.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0428 21:45:46.027101   59661 out.go:177] üîé  Verifying Kubernetes components...
W0428 21:45:46.018088   59661 out.go:239] ‚ùó  Enabling 'default-storageclass' returned an error: running callbacks: [Error making standard the default storage class: Error listing StorageClasses: Get "https://10.0.2.15:8443/apis/storage.k8s.io/v1/storageclasses": dial tcp 10.0.2.15:8443: i/o timeout]
I0428 21:45:46.035073   59661 out.go:177] üåü  Enabled addons: storage-provisioner
I0428 21:45:46.032242   59661 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0428 21:45:46.038069   59661 addons.go:499] enable addons completed in 30.023206292s: enabled=[storage-provisioner]
I0428 21:45:46.045382   59661 api_server.go:51] waiting for apiserver process to appear ...
I0428 21:45:46.045456   59661 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0428 21:45:46.050529   59661 api_server.go:71] duration metric: took 32.484334ms to wait for apiserver process to appear ...
I0428 21:45:46.050535   59661 api_server.go:87] waiting for apiserver healthz status ...
I0428 21:45:46.050539   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:45:51.050914   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:45:51.551998   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:45:56.552218   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:45:57.051860   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:46:02.052081   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:46:02.551816   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:46:07.552066   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:46:08.051608   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:46:13.051944   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:46:13.550545   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:46:18.551353   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:46:18.551397   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:46:22.575874   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": dial tcp 10.0.2.15:8443: connect: connection refused
I0428 21:46:23.051216   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:46:28.051305   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:46:28.551131   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:46:33.551377   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:46:34.050922   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:46:39.051116   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:46:39.550789   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:46:44.550978   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:46:45.050672   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:46:49.156918   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": dial tcp 10.0.2.15:8443: connect: connection refused
I0428 21:46:49.550757   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:46:49.563538   59661 logs.go:277] 1 containers: [a5e12462ba78]
I0428 21:46:49.563600   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:46:49.572461   59661 logs.go:277] 1 containers: [0b9e36c63792]
I0428 21:46:49.572498   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:46:49.580532   59661 logs.go:277] 2 containers: [99aeb807e948 6f9c2097a3f6]
I0428 21:46:49.580568   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:46:49.588152   59661 logs.go:277] 1 containers: [e151ddca4b03]
I0428 21:46:49.588189   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:46:49.595233   59661 logs.go:277] 1 containers: [e1dc83c9b2e2]
I0428 21:46:49.595265   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:46:49.601869   59661 logs.go:277] 1 containers: [b6a33796b054]
I0428 21:46:49.601895   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:46:49.608264   59661 logs.go:277] 0 containers: []
W0428 21:46:49.608266   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:46:49.608291   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:46:49.614390   59661 logs.go:277] 1 containers: [d4038b698a41]
I0428 21:46:49.614396   59661 logs.go:123] Gathering logs for etcd [0b9e36c63792] ...
I0428 21:46:49.614399   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0b9e36c63792"
I0428 21:46:49.623941   59661 logs.go:123] Gathering logs for storage-provisioner [d4038b698a41] ...
I0428 21:46:49.623944   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d4038b698a41"
I0428 21:46:49.630746   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:46:49.630752   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:46:49.655339   59661 logs.go:123] Gathering logs for container status ...
I0428 21:46:49.655342   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:46:49.666697   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:46:49.666705   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0428 21:46:49.697461   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:46:49.697529   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:46:49.699110   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:46:49.699112   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:46:49.735935   59661 logs.go:123] Gathering logs for kube-apiserver [a5e12462ba78] ...
I0428 21:46:49.735939   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a5e12462ba78"
I0428 21:46:49.745998   59661 logs.go:123] Gathering logs for kube-scheduler [e151ddca4b03] ...
I0428 21:46:49.746007   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e151ddca4b03"
I0428 21:46:49.756066   59661 logs.go:123] Gathering logs for kube-proxy [e1dc83c9b2e2] ...
I0428 21:46:49.756069   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e1dc83c9b2e2"
I0428 21:46:49.763067   59661 logs.go:123] Gathering logs for kube-controller-manager [b6a33796b054] ...
I0428 21:46:49.763072   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b6a33796b054"
I0428 21:46:49.776937   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:46:49.776941   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:46:49.781324   59661 logs.go:123] Gathering logs for coredns [99aeb807e948] ...
I0428 21:46:49.781326   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 99aeb807e948"
I0428 21:46:49.787738   59661 logs.go:123] Gathering logs for coredns [6f9c2097a3f6] ...
I0428 21:46:49.787745   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 6f9c2097a3f6"
I0428 21:46:49.794529   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:46:49.794543   59661 out.go:348] isatty.IsTerminal(2) = true
W0428 21:46:49.794597   59661 out.go:239] ‚ùå  Problems detected in kubelet:
W0428 21:46:49.794606   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:46:49.794610   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:46:49.794613   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:46:49.794616   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:46:59.796438   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:47:04.797738   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:47:05.050373   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:47:05.066295   59661 logs.go:277] 1 containers: [a5e12462ba78]
I0428 21:47:05.066357   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:47:05.076460   59661 logs.go:277] 1 containers: [0b9e36c63792]
I0428 21:47:05.076504   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:47:05.088327   59661 logs.go:277] 2 containers: [99aeb807e948 6f9c2097a3f6]
I0428 21:47:05.088361   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:47:05.097949   59661 logs.go:277] 1 containers: [e151ddca4b03]
I0428 21:47:05.097984   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:47:05.105179   59661 logs.go:277] 1 containers: [e1dc83c9b2e2]
I0428 21:47:05.105226   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:47:05.112727   59661 logs.go:277] 1 containers: [b6a33796b054]
I0428 21:47:05.112752   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:47:05.120335   59661 logs.go:277] 0 containers: []
W0428 21:47:05.120337   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:47:05.120360   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:47:05.127115   59661 logs.go:277] 1 containers: [d4038b698a41]
I0428 21:47:05.127121   59661 logs.go:123] Gathering logs for etcd [0b9e36c63792] ...
I0428 21:47:05.127124   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0b9e36c63792"
I0428 21:47:05.136639   59661 logs.go:123] Gathering logs for kube-proxy [e1dc83c9b2e2] ...
I0428 21:47:05.136641   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e1dc83c9b2e2"
I0428 21:47:05.144301   59661 logs.go:123] Gathering logs for kube-controller-manager [b6a33796b054] ...
I0428 21:47:05.144305   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b6a33796b054"
I0428 21:47:05.156521   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:47:05.156524   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:47:05.180922   59661 logs.go:123] Gathering logs for container status ...
I0428 21:47:05.180925   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:47:05.190821   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:47:05.190824   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0428 21:47:05.219771   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:47:05.219845   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:47:05.221542   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:47:05.221545   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:47:05.257556   59661 logs.go:123] Gathering logs for kube-apiserver [a5e12462ba78] ...
I0428 21:47:05.257562   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a5e12462ba78"
I0428 21:47:05.267592   59661 logs.go:123] Gathering logs for coredns [99aeb807e948] ...
I0428 21:47:05.267595   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 99aeb807e948"
I0428 21:47:05.275677   59661 logs.go:123] Gathering logs for coredns [6f9c2097a3f6] ...
I0428 21:47:05.275687   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 6f9c2097a3f6"
I0428 21:47:05.282324   59661 logs.go:123] Gathering logs for kube-scheduler [e151ddca4b03] ...
I0428 21:47:05.282328   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e151ddca4b03"
I0428 21:47:05.292481   59661 logs.go:123] Gathering logs for storage-provisioner [d4038b698a41] ...
I0428 21:47:05.292484   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d4038b698a41"
I0428 21:47:05.300612   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:47:05.300616   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:47:05.305440   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:47:05.305454   59661 out.go:348] isatty.IsTerminal(2) = true
W0428 21:47:05.305503   59661 out.go:239] ‚ùå  Problems detected in kubelet:
W0428 21:47:05.305510   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:47:05.305515   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:47:05.305519   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:47:05.305523   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:47:15.307510   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:47:20.308730   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:47:20.549938   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:47:20.560509   59661 logs.go:277] 1 containers: [a5e12462ba78]
I0428 21:47:20.560556   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:47:20.570590   59661 logs.go:277] 1 containers: [0b9e36c63792]
I0428 21:47:20.570626   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:47:20.577673   59661 logs.go:277] 2 containers: [99aeb807e948 6f9c2097a3f6]
I0428 21:47:20.577704   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:47:20.586087   59661 logs.go:277] 1 containers: [e151ddca4b03]
I0428 21:47:20.586116   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:47:20.592909   59661 logs.go:277] 1 containers: [e1dc83c9b2e2]
I0428 21:47:20.592939   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:47:20.600473   59661 logs.go:277] 1 containers: [b6a33796b054]
I0428 21:47:20.600504   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:47:20.606663   59661 logs.go:277] 0 containers: []
W0428 21:47:20.606665   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:47:20.606688   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:47:20.612849   59661 logs.go:277] 1 containers: [d4038b698a41]
I0428 21:47:20.612854   59661 logs.go:123] Gathering logs for coredns [99aeb807e948] ...
I0428 21:47:20.612857   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 99aeb807e948"
I0428 21:47:20.622823   59661 logs.go:123] Gathering logs for kube-scheduler [e151ddca4b03] ...
I0428 21:47:20.622827   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e151ddca4b03"
I0428 21:47:20.636508   59661 logs.go:123] Gathering logs for kube-controller-manager [b6a33796b054] ...
I0428 21:47:20.636512   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b6a33796b054"
I0428 21:47:20.649113   59661 logs.go:123] Gathering logs for storage-provisioner [d4038b698a41] ...
I0428 21:47:20.649117   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d4038b698a41"
I0428 21:47:20.656006   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:47:20.656010   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:47:20.680353   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:47:20.680355   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0428 21:47:20.710945   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:47:20.711020   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:47:20.712721   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:47:20.712727   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:47:20.749063   59661 logs.go:123] Gathering logs for etcd [0b9e36c63792] ...
I0428 21:47:20.749068   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0b9e36c63792"
I0428 21:47:20.759093   59661 logs.go:123] Gathering logs for kube-proxy [e1dc83c9b2e2] ...
I0428 21:47:20.759096   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e1dc83c9b2e2"
I0428 21:47:20.766706   59661 logs.go:123] Gathering logs for container status ...
I0428 21:47:20.766710   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:47:20.776736   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:47:20.776739   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:47:20.780816   59661 logs.go:123] Gathering logs for kube-apiserver [a5e12462ba78] ...
I0428 21:47:20.780823   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a5e12462ba78"
I0428 21:47:20.791151   59661 logs.go:123] Gathering logs for coredns [6f9c2097a3f6] ...
I0428 21:47:20.791154   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 6f9c2097a3f6"
I0428 21:47:20.797770   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:47:20.797786   59661 out.go:348] isatty.IsTerminal(2) = true
W0428 21:47:20.797836   59661 out.go:239] ‚ùå  Problems detected in kubelet:
W0428 21:47:20.797845   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:47:20.797850   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:47:20.797854   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:47:20.797858   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:47:30.799704   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:47:35.800972   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:47:36.049638   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:47:36.061998   59661 logs.go:277] 1 containers: [a5e12462ba78]
I0428 21:47:36.062045   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:47:36.071260   59661 logs.go:277] 1 containers: [0b9e36c63792]
I0428 21:47:36.071301   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:47:36.080647   59661 logs.go:277] 2 containers: [99aeb807e948 6f9c2097a3f6]
I0428 21:47:36.080682   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:47:36.090746   59661 logs.go:277] 1 containers: [e151ddca4b03]
I0428 21:47:36.090786   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:47:36.098913   59661 logs.go:277] 1 containers: [e1dc83c9b2e2]
I0428 21:47:36.098946   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:47:36.112777   59661 logs.go:277] 1 containers: [b6a33796b054]
I0428 21:47:36.112818   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:47:36.120385   59661 logs.go:277] 0 containers: []
W0428 21:47:36.120388   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:47:36.120420   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:47:36.127592   59661 logs.go:277] 1 containers: [d4038b698a41]
I0428 21:47:36.127598   59661 logs.go:123] Gathering logs for storage-provisioner [d4038b698a41] ...
I0428 21:47:36.127602   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d4038b698a41"
I0428 21:47:36.136706   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:47:36.136710   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:47:36.161929   59661 logs.go:123] Gathering logs for kube-apiserver [a5e12462ba78] ...
I0428 21:47:36.161933   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a5e12462ba78"
I0428 21:47:36.172822   59661 logs.go:123] Gathering logs for coredns [99aeb807e948] ...
I0428 21:47:36.172832   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 99aeb807e948"
I0428 21:47:36.180219   59661 logs.go:123] Gathering logs for kube-scheduler [e151ddca4b03] ...
I0428 21:47:36.180223   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e151ddca4b03"
I0428 21:47:36.190372   59661 logs.go:123] Gathering logs for etcd [0b9e36c63792] ...
I0428 21:47:36.190380   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0b9e36c63792"
I0428 21:47:36.200305   59661 logs.go:123] Gathering logs for coredns [6f9c2097a3f6] ...
I0428 21:47:36.200310   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 6f9c2097a3f6"
I0428 21:47:36.207420   59661 logs.go:123] Gathering logs for kube-proxy [e1dc83c9b2e2] ...
I0428 21:47:36.207425   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e1dc83c9b2e2"
I0428 21:47:36.216354   59661 logs.go:123] Gathering logs for kube-controller-manager [b6a33796b054] ...
I0428 21:47:36.216357   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b6a33796b054"
I0428 21:47:36.228790   59661 logs.go:123] Gathering logs for container status ...
I0428 21:47:36.228796   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:47:36.239752   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:47:36.239756   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0428 21:47:36.270996   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:47:36.271067   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:47:36.272642   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:47:36.272646   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:47:36.276981   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:47:36.276986   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:47:36.313251   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:47:36.313267   59661 out.go:348] isatty.IsTerminal(2) = true
W0428 21:47:36.313337   59661 out.go:239] ‚ùå  Problems detected in kubelet:
W0428 21:47:36.313346   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:47:36.313351   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:47:36.313355   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:47:36.313359   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:47:46.314802   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:47:49.330967   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": dial tcp 10.0.2.15:8443: connect: connection refused
I0428 21:47:49.549479   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:47:49.572033   59661 logs.go:277] 1 containers: [a5e12462ba78]
I0428 21:47:49.572174   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:47:49.585558   59661 logs.go:277] 1 containers: [0b9e36c63792]
I0428 21:47:49.585630   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:47:49.595702   59661 logs.go:277] 2 containers: [99aeb807e948 6f9c2097a3f6]
I0428 21:47:49.595748   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:47:49.605595   59661 logs.go:277] 1 containers: [e151ddca4b03]
I0428 21:47:49.605630   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:47:49.612983   59661 logs.go:277] 1 containers: [e1dc83c9b2e2]
I0428 21:47:49.613019   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:47:49.620647   59661 logs.go:277] 1 containers: [b6a33796b054]
I0428 21:47:49.620676   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:47:49.627487   59661 logs.go:277] 0 containers: []
W0428 21:47:49.627490   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:47:49.627515   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:47:49.634927   59661 logs.go:277] 1 containers: [d4038b698a41]
I0428 21:47:49.634932   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:47:49.634934   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0428 21:47:49.665962   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:47:49.666032   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:47:49.667617   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:47:49.667619   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:47:49.671794   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:47:49.671797   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:47:49.708803   59661 logs.go:123] Gathering logs for kube-apiserver [a5e12462ba78] ...
I0428 21:47:49.708808   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a5e12462ba78"
I0428 21:47:49.719043   59661 logs.go:123] Gathering logs for coredns [99aeb807e948] ...
I0428 21:47:49.719049   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 99aeb807e948"
I0428 21:47:49.726065   59661 logs.go:123] Gathering logs for coredns [6f9c2097a3f6] ...
I0428 21:47:49.726068   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 6f9c2097a3f6"
I0428 21:47:49.732986   59661 logs.go:123] Gathering logs for container status ...
I0428 21:47:49.732990   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:47:49.757477   59661 logs.go:123] Gathering logs for etcd [0b9e36c63792] ...
I0428 21:47:49.757481   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0b9e36c63792"
I0428 21:47:49.767585   59661 logs.go:123] Gathering logs for kube-scheduler [e151ddca4b03] ...
I0428 21:47:49.767589   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e151ddca4b03"
I0428 21:47:49.777946   59661 logs.go:123] Gathering logs for kube-proxy [e1dc83c9b2e2] ...
I0428 21:47:49.777950   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e1dc83c9b2e2"
I0428 21:47:49.785014   59661 logs.go:123] Gathering logs for kube-controller-manager [b6a33796b054] ...
I0428 21:47:49.785022   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b6a33796b054"
I0428 21:47:49.797576   59661 logs.go:123] Gathering logs for storage-provisioner [d4038b698a41] ...
I0428 21:47:49.797581   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d4038b698a41"
I0428 21:47:49.806183   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:47:49.806186   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:47:49.831047   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:47:49.831057   59661 out.go:348] isatty.IsTerminal(2) = true
W0428 21:47:49.831120   59661 out.go:239] ‚ùå  Problems detected in kubelet:
W0428 21:47:49.831129   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:47:49.831135   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:47:49.831138   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:47:49.831143   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:47:59.832948   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:48:04.833625   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:48:05.048841   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:48:05.063681   59661 logs.go:277] 1 containers: [a5e12462ba78]
I0428 21:48:05.063753   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:48:05.073687   59661 logs.go:277] 1 containers: [0b9e36c63792]
I0428 21:48:05.073725   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:48:05.082318   59661 logs.go:277] 2 containers: [99aeb807e948 6f9c2097a3f6]
I0428 21:48:05.082356   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:48:05.090303   59661 logs.go:277] 1 containers: [e151ddca4b03]
I0428 21:48:05.090345   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:48:05.097833   59661 logs.go:277] 1 containers: [e1dc83c9b2e2]
I0428 21:48:05.097861   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:48:05.106138   59661 logs.go:277] 1 containers: [b6a33796b054]
I0428 21:48:05.106163   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:48:05.112815   59661 logs.go:277] 0 containers: []
W0428 21:48:05.112818   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:48:05.112844   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:48:05.119456   59661 logs.go:277] 1 containers: [d4038b698a41]
I0428 21:48:05.119462   59661 logs.go:123] Gathering logs for etcd [0b9e36c63792] ...
I0428 21:48:05.119466   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0b9e36c63792"
I0428 21:48:05.130586   59661 logs.go:123] Gathering logs for coredns [99aeb807e948] ...
I0428 21:48:05.130589   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 99aeb807e948"
I0428 21:48:05.137429   59661 logs.go:123] Gathering logs for kube-scheduler [e151ddca4b03] ...
I0428 21:48:05.137433   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e151ddca4b03"
I0428 21:48:05.147192   59661 logs.go:123] Gathering logs for storage-provisioner [d4038b698a41] ...
I0428 21:48:05.147195   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d4038b698a41"
I0428 21:48:05.153769   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:48:05.153772   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:48:05.178114   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:48:05.178117   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:48:05.182612   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:48:05.182615   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:48:05.217660   59661 logs.go:123] Gathering logs for kube-apiserver [a5e12462ba78] ...
I0428 21:48:05.217665   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a5e12462ba78"
I0428 21:48:05.227612   59661 logs.go:123] Gathering logs for coredns [6f9c2097a3f6] ...
I0428 21:48:05.227616   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 6f9c2097a3f6"
I0428 21:48:05.234652   59661 logs.go:123] Gathering logs for kube-proxy [e1dc83c9b2e2] ...
I0428 21:48:05.234655   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e1dc83c9b2e2"
I0428 21:48:05.242036   59661 logs.go:123] Gathering logs for kube-controller-manager [b6a33796b054] ...
I0428 21:48:05.242039   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b6a33796b054"
I0428 21:48:05.253874   59661 logs.go:123] Gathering logs for container status ...
I0428 21:48:05.253876   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:48:05.264345   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:48:05.264350   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0428 21:48:05.294401   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:48:05.294474   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:48:05.296139   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:48:05.296154   59661 out.go:348] isatty.IsTerminal(2) = true
W0428 21:48:05.296202   59661 out.go:239] ‚ùå  Problems detected in kubelet:
W0428 21:48:05.296211   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:48:05.296215   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:48:05.296219   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:48:05.296223   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:48:15.298173   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:48:20.299306   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:48:20.548411   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:48:20.559617   59661 logs.go:277] 1 containers: [a5e12462ba78]
I0428 21:48:20.559657   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:48:20.567603   59661 logs.go:277] 1 containers: [0b9e36c63792]
I0428 21:48:20.567647   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:48:20.574799   59661 logs.go:277] 2 containers: [99aeb807e948 6f9c2097a3f6]
I0428 21:48:20.574835   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:48:20.581878   59661 logs.go:277] 1 containers: [e151ddca4b03]
I0428 21:48:20.581904   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:48:20.589787   59661 logs.go:277] 1 containers: [e1dc83c9b2e2]
I0428 21:48:20.589819   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:48:20.598103   59661 logs.go:277] 1 containers: [b6a33796b054]
I0428 21:48:20.598133   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:48:20.604378   59661 logs.go:277] 0 containers: []
W0428 21:48:20.604381   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:48:20.604407   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:48:20.611677   59661 logs.go:277] 1 containers: [d4038b698a41]
I0428 21:48:20.611683   59661 logs.go:123] Gathering logs for container status ...
I0428 21:48:20.611686   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:48:20.623380   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:48:20.623383   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0428 21:48:20.654058   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:48:20.654126   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:48:20.655702   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:48:20.655704   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:48:20.692134   59661 logs.go:123] Gathering logs for kube-apiserver [a5e12462ba78] ...
I0428 21:48:20.692138   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a5e12462ba78"
I0428 21:48:20.702805   59661 logs.go:123] Gathering logs for etcd [0b9e36c63792] ...
I0428 21:48:20.702808   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0b9e36c63792"
I0428 21:48:20.713386   59661 logs.go:123] Gathering logs for kube-scheduler [e151ddca4b03] ...
I0428 21:48:20.713389   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e151ddca4b03"
I0428 21:48:20.724440   59661 logs.go:123] Gathering logs for kube-controller-manager [b6a33796b054] ...
I0428 21:48:20.724446   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b6a33796b054"
I0428 21:48:20.737769   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:48:20.737772   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:48:20.761045   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:48:20.761051   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:48:20.765628   59661 logs.go:123] Gathering logs for coredns [99aeb807e948] ...
I0428 21:48:20.765633   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 99aeb807e948"
I0428 21:48:20.773097   59661 logs.go:123] Gathering logs for coredns [6f9c2097a3f6] ...
I0428 21:48:20.773101   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 6f9c2097a3f6"
I0428 21:48:20.779946   59661 logs.go:123] Gathering logs for kube-proxy [e1dc83c9b2e2] ...
I0428 21:48:20.779950   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e1dc83c9b2e2"
I0428 21:48:20.788291   59661 logs.go:123] Gathering logs for storage-provisioner [d4038b698a41] ...
I0428 21:48:20.788297   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d4038b698a41"
I0428 21:48:20.795227   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:48:20.795238   59661 out.go:348] isatty.IsTerminal(2) = true
W0428 21:48:20.795287   59661 out.go:239] ‚ùå  Problems detected in kubelet:
W0428 21:48:20.795297   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:48:20.795302   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:48:20.795305   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:48:20.795309   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:48:30.797151   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:48:35.798445   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:48:36.047983   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:48:36.058745   59661 logs.go:277] 1 containers: [a5e12462ba78]
I0428 21:48:36.058796   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:48:36.067116   59661 logs.go:277] 1 containers: [0b9e36c63792]
I0428 21:48:36.067162   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:48:36.075018   59661 logs.go:277] 2 containers: [99aeb807e948 6f9c2097a3f6]
I0428 21:48:36.075051   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:48:36.082191   59661 logs.go:277] 1 containers: [e151ddca4b03]
I0428 21:48:36.082222   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:48:36.089646   59661 logs.go:277] 1 containers: [e1dc83c9b2e2]
I0428 21:48:36.089674   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:48:36.097095   59661 logs.go:277] 1 containers: [b6a33796b054]
I0428 21:48:36.097120   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:48:36.103513   59661 logs.go:277] 0 containers: []
W0428 21:48:36.103516   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:48:36.103541   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:48:36.109951   59661 logs.go:277] 1 containers: [d4038b698a41]
I0428 21:48:36.109956   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:48:36.109960   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:48:36.145595   59661 logs.go:123] Gathering logs for kube-apiserver [a5e12462ba78] ...
I0428 21:48:36.145599   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a5e12462ba78"
I0428 21:48:36.159263   59661 logs.go:123] Gathering logs for etcd [0b9e36c63792] ...
I0428 21:48:36.159267   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0b9e36c63792"
I0428 21:48:36.168239   59661 logs.go:123] Gathering logs for storage-provisioner [d4038b698a41] ...
I0428 21:48:36.168242   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d4038b698a41"
I0428 21:48:36.175069   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:48:36.175072   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0428 21:48:36.203992   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:48:36.204068   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:48:36.205650   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:48:36.205652   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:48:36.209740   59661 logs.go:123] Gathering logs for kube-scheduler [e151ddca4b03] ...
I0428 21:48:36.209744   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e151ddca4b03"
I0428 21:48:36.220155   59661 logs.go:123] Gathering logs for kube-proxy [e1dc83c9b2e2] ...
I0428 21:48:36.220158   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e1dc83c9b2e2"
I0428 21:48:36.227623   59661 logs.go:123] Gathering logs for kube-controller-manager [b6a33796b054] ...
I0428 21:48:36.227626   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b6a33796b054"
I0428 21:48:36.239981   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:48:36.239984   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:48:36.264008   59661 logs.go:123] Gathering logs for container status ...
I0428 21:48:36.264011   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:48:36.275619   59661 logs.go:123] Gathering logs for coredns [99aeb807e948] ...
I0428 21:48:36.275623   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 99aeb807e948"
I0428 21:48:36.284170   59661 logs.go:123] Gathering logs for coredns [6f9c2097a3f6] ...
I0428 21:48:36.284173   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 6f9c2097a3f6"
I0428 21:48:36.290900   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:48:36.290913   59661 out.go:348] isatty.IsTerminal(2) = true
W0428 21:48:36.290960   59661 out.go:239] ‚ùå  Problems detected in kubelet:
W0428 21:48:36.290972   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:48:36.291004   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:48:36.291007   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:48:36.291011   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:48:46.292577   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:48:51.293854   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:48:51.547600   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:48:51.559823   59661 logs.go:277] 1 containers: [a5e12462ba78]
I0428 21:48:51.559876   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:48:51.568925   59661 logs.go:277] 1 containers: [0b9e36c63792]
I0428 21:48:51.568965   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:48:51.577719   59661 logs.go:277] 2 containers: [99aeb807e948 6f9c2097a3f6]
I0428 21:48:51.577751   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:48:51.585423   59661 logs.go:277] 1 containers: [e151ddca4b03]
I0428 21:48:51.585452   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:48:51.592454   59661 logs.go:277] 1 containers: [e1dc83c9b2e2]
I0428 21:48:51.592489   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:48:51.599149   59661 logs.go:277] 1 containers: [b6a33796b054]
I0428 21:48:51.599173   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:48:51.605485   59661 logs.go:277] 0 containers: []
W0428 21:48:51.605487   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:48:51.605506   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:48:51.611797   59661 logs.go:277] 1 containers: [d4038b698a41]
I0428 21:48:51.611806   59661 logs.go:123] Gathering logs for coredns [99aeb807e948] ...
I0428 21:48:51.611810   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 99aeb807e948"
I0428 21:48:51.619050   59661 logs.go:123] Gathering logs for kube-scheduler [e151ddca4b03] ...
I0428 21:48:51.619053   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e151ddca4b03"
I0428 21:48:51.630009   59661 logs.go:123] Gathering logs for kube-controller-manager [b6a33796b054] ...
I0428 21:48:51.630013   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b6a33796b054"
I0428 21:48:51.642341   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:48:51.642345   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:48:51.666814   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:48:51.666817   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0428 21:48:51.695201   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:48:51.695274   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:48:51.696946   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:48:51.696949   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:48:51.701270   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:48:51.701275   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:48:51.738307   59661 logs.go:123] Gathering logs for etcd [0b9e36c63792] ...
I0428 21:48:51.738312   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0b9e36c63792"
I0428 21:48:51.750217   59661 logs.go:123] Gathering logs for container status ...
I0428 21:48:51.750224   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:48:51.760480   59661 logs.go:123] Gathering logs for kube-apiserver [a5e12462ba78] ...
I0428 21:48:51.760483   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a5e12462ba78"
I0428 21:48:51.770505   59661 logs.go:123] Gathering logs for coredns [6f9c2097a3f6] ...
I0428 21:48:51.770508   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 6f9c2097a3f6"
I0428 21:48:51.777319   59661 logs.go:123] Gathering logs for kube-proxy [e1dc83c9b2e2] ...
I0428 21:48:51.777323   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e1dc83c9b2e2"
I0428 21:48:51.784386   59661 logs.go:123] Gathering logs for storage-provisioner [d4038b698a41] ...
I0428 21:48:51.784389   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d4038b698a41"
I0428 21:48:51.791043   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:48:51.791054   59661 out.go:348] isatty.IsTerminal(2) = true
W0428 21:48:51.791101   59661 out.go:239] ‚ùå  Problems detected in kubelet:
W0428 21:48:51.791113   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:48:51.791118   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:48:51.791121   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:48:51.791124   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:49:01.792149   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:49:06.793322   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:49:07.047231   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:49:07.058894   59661 logs.go:277] 1 containers: [a5e12462ba78]
I0428 21:49:07.058949   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:49:07.067406   59661 logs.go:277] 1 containers: [0b9e36c63792]
I0428 21:49:07.067442   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:49:07.075009   59661 logs.go:277] 2 containers: [99aeb807e948 6f9c2097a3f6]
I0428 21:49:07.075048   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:49:07.082085   59661 logs.go:277] 1 containers: [e151ddca4b03]
I0428 21:49:07.082115   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:49:07.089726   59661 logs.go:277] 1 containers: [e1dc83c9b2e2]
I0428 21:49:07.089759   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:49:07.096683   59661 logs.go:277] 1 containers: [b6a33796b054]
I0428 21:49:07.096709   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:49:07.102931   59661 logs.go:277] 0 containers: []
W0428 21:49:07.102933   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:49:07.102957   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:49:07.109718   59661 logs.go:277] 1 containers: [d4038b698a41]
I0428 21:49:07.109724   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:49:07.109727   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0428 21:49:07.140575   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:49:07.140647   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:49:07.142222   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:49:07.142225   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:49:07.146818   59661 logs.go:123] Gathering logs for kube-apiserver [a5e12462ba78] ...
I0428 21:49:07.146821   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a5e12462ba78"
I0428 21:49:07.156911   59661 logs.go:123] Gathering logs for etcd [0b9e36c63792] ...
I0428 21:49:07.156914   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0b9e36c63792"
I0428 21:49:07.168214   59661 logs.go:123] Gathering logs for coredns [99aeb807e948] ...
I0428 21:49:07.168217   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 99aeb807e948"
I0428 21:49:07.174649   59661 logs.go:123] Gathering logs for coredns [6f9c2097a3f6] ...
I0428 21:49:07.174656   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 6f9c2097a3f6"
I0428 21:49:07.181194   59661 logs.go:123] Gathering logs for kube-scheduler [e151ddca4b03] ...
I0428 21:49:07.181198   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e151ddca4b03"
I0428 21:49:07.191030   59661 logs.go:123] Gathering logs for container status ...
I0428 21:49:07.191033   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:49:07.201396   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:49:07.201399   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:49:07.236732   59661 logs.go:123] Gathering logs for kube-proxy [e1dc83c9b2e2] ...
I0428 21:49:07.236737   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e1dc83c9b2e2"
I0428 21:49:07.244709   59661 logs.go:123] Gathering logs for kube-controller-manager [b6a33796b054] ...
I0428 21:49:07.244712   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b6a33796b054"
I0428 21:49:07.257481   59661 logs.go:123] Gathering logs for storage-provisioner [d4038b698a41] ...
I0428 21:49:07.257485   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d4038b698a41"
I0428 21:49:07.264738   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:49:07.264741   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:49:07.287676   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:49:07.287689   59661 out.go:348] isatty.IsTerminal(2) = true
W0428 21:49:07.287739   59661 out.go:239] ‚ùå  Problems detected in kubelet:
W0428 21:49:07.287749   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:49:07.287755   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:49:07.287757   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:49:07.287761   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:49:17.289626   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:49:22.290048   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:49:22.546834   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:49:22.560418   59661 logs.go:277] 1 containers: [a5e12462ba78]
I0428 21:49:22.560467   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:49:22.569289   59661 logs.go:277] 1 containers: [0b9e36c63792]
I0428 21:49:22.569320   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:49:22.577348   59661 logs.go:277] 2 containers: [99aeb807e948 6f9c2097a3f6]
I0428 21:49:22.577378   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:49:22.584833   59661 logs.go:277] 1 containers: [e151ddca4b03]
I0428 21:49:22.584857   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:49:22.593042   59661 logs.go:277] 1 containers: [e1dc83c9b2e2]
I0428 21:49:22.593074   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:49:22.600243   59661 logs.go:277] 1 containers: [b6a33796b054]
I0428 21:49:22.600270   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:49:22.606566   59661 logs.go:277] 0 containers: []
W0428 21:49:22.606569   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:49:22.606590   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:49:22.612803   59661 logs.go:277] 1 containers: [d4038b698a41]
I0428 21:49:22.612809   59661 logs.go:123] Gathering logs for container status ...
I0428 21:49:22.612812   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:49:22.623350   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:49:22.623354   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:49:22.627547   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:49:22.627550   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:49:22.669285   59661 logs.go:123] Gathering logs for kube-apiserver [a5e12462ba78] ...
I0428 21:49:22.669290   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a5e12462ba78"
I0428 21:49:22.679600   59661 logs.go:123] Gathering logs for etcd [0b9e36c63792] ...
I0428 21:49:22.679604   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0b9e36c63792"
I0428 21:49:22.690855   59661 logs.go:123] Gathering logs for kube-scheduler [e151ddca4b03] ...
I0428 21:49:22.690859   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e151ddca4b03"
I0428 21:49:22.702727   59661 logs.go:123] Gathering logs for kube-proxy [e1dc83c9b2e2] ...
I0428 21:49:22.702730   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e1dc83c9b2e2"
I0428 21:49:22.709960   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:49:22.709964   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:49:22.733951   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:49:22.733954   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0428 21:49:22.764553   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:49:22.764626   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:49:22.766332   59661 logs.go:123] Gathering logs for coredns [99aeb807e948] ...
I0428 21:49:22.766335   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 99aeb807e948"
I0428 21:49:22.774983   59661 logs.go:123] Gathering logs for coredns [6f9c2097a3f6] ...
I0428 21:49:22.774986   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 6f9c2097a3f6"
I0428 21:49:22.781521   59661 logs.go:123] Gathering logs for kube-controller-manager [b6a33796b054] ...
I0428 21:49:22.781524   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b6a33796b054"
I0428 21:49:22.794159   59661 logs.go:123] Gathering logs for storage-provisioner [d4038b698a41] ...
I0428 21:49:22.794162   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d4038b698a41"
I0428 21:49:22.800820   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:49:22.800832   59661 out.go:348] isatty.IsTerminal(2) = true
W0428 21:49:22.800877   59661 out.go:239] ‚ùå  Problems detected in kubelet:
W0428 21:49:22.800886   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:49:22.800890   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:49:22.800893   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:49:22.800896   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:49:32.801808   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:49:37.803117   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:49:38.046409   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:49:38.056976   59661 logs.go:277] 1 containers: [a5e12462ba78]
I0428 21:49:38.057027   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:49:38.064740   59661 logs.go:277] 1 containers: [0b9e36c63792]
I0428 21:49:38.064785   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:49:38.072857   59661 logs.go:277] 2 containers: [99aeb807e948 6f9c2097a3f6]
I0428 21:49:38.072886   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:49:38.080055   59661 logs.go:277] 1 containers: [e151ddca4b03]
I0428 21:49:38.080107   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:49:38.086831   59661 logs.go:277] 1 containers: [e1dc83c9b2e2]
I0428 21:49:38.086873   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:49:38.097227   59661 logs.go:277] 1 containers: [b6a33796b054]
I0428 21:49:38.097254   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:49:38.103517   59661 logs.go:277] 0 containers: []
W0428 21:49:38.103519   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:49:38.103546   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:49:38.109512   59661 logs.go:277] 1 containers: [d4038b698a41]
I0428 21:49:38.109519   59661 logs.go:123] Gathering logs for kube-apiserver [a5e12462ba78] ...
I0428 21:49:38.109522   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a5e12462ba78"
I0428 21:49:38.119191   59661 logs.go:123] Gathering logs for kube-scheduler [e151ddca4b03] ...
I0428 21:49:38.119195   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e151ddca4b03"
I0428 21:49:38.128895   59661 logs.go:123] Gathering logs for kube-controller-manager [b6a33796b054] ...
I0428 21:49:38.128901   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b6a33796b054"
I0428 21:49:38.141104   59661 logs.go:123] Gathering logs for storage-provisioner [d4038b698a41] ...
I0428 21:49:38.141109   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d4038b698a41"
I0428 21:49:38.147909   59661 logs.go:123] Gathering logs for container status ...
I0428 21:49:38.147912   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:49:38.160069   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:49:38.160073   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:49:38.164519   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:49:38.164523   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:49:38.201264   59661 logs.go:123] Gathering logs for etcd [0b9e36c63792] ...
I0428 21:49:38.201268   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0b9e36c63792"
I0428 21:49:38.214681   59661 logs.go:123] Gathering logs for coredns [99aeb807e948] ...
I0428 21:49:38.214685   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 99aeb807e948"
I0428 21:49:38.221860   59661 logs.go:123] Gathering logs for coredns [6f9c2097a3f6] ...
I0428 21:49:38.221863   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 6f9c2097a3f6"
I0428 21:49:38.228573   59661 logs.go:123] Gathering logs for kube-proxy [e1dc83c9b2e2] ...
I0428 21:49:38.228577   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e1dc83c9b2e2"
I0428 21:49:38.235569   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:49:38.235572   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:49:38.258839   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:49:38.258843   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0428 21:49:38.287032   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:49:38.287104   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:49:38.288704   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:49:38.288715   59661 out.go:348] isatty.IsTerminal(2) = true
W0428 21:49:38.288767   59661 out.go:239] ‚ùå  Problems detected in kubelet:
W0428 21:49:38.288776   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:49:38.288780   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:49:38.288782   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:49:38.288786   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:49:48.289415   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:49:53.291008   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:49:53.291258   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-apiserver --format={{.ID}}
I0428 21:49:53.304133   59661 logs.go:277] 1 containers: [a5e12462ba78]
I0428 21:49:53.304190   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_etcd --format={{.ID}}
I0428 21:49:53.313273   59661 logs.go:277] 1 containers: [0b9e36c63792]
I0428 21:49:53.313310   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_coredns --format={{.ID}}
I0428 21:49:53.321182   59661 logs.go:277] 2 containers: [99aeb807e948 6f9c2097a3f6]
I0428 21:49:53.321216   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-scheduler --format={{.ID}}
I0428 21:49:53.329096   59661 logs.go:277] 1 containers: [e151ddca4b03]
I0428 21:49:53.329127   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-proxy --format={{.ID}}
I0428 21:49:53.337028   59661 logs.go:277] 1 containers: [e1dc83c9b2e2]
I0428 21:49:53.337060   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kube-controller-manager --format={{.ID}}
I0428 21:49:53.344748   59661 logs.go:277] 1 containers: [b6a33796b054]
I0428 21:49:53.344781   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_kindnet --format={{.ID}}
I0428 21:49:53.351431   59661 logs.go:277] 0 containers: []
W0428 21:49:53.351434   59661 logs.go:279] No container was found matching "kindnet"
I0428 21:49:53.351459   59661 ssh_runner.go:195] Run: docker ps -a --filter=name=k8s_storage-provisioner --format={{.ID}}
I0428 21:49:53.359216   59661 logs.go:277] 1 containers: [d4038b698a41]
I0428 21:49:53.359222   59661 logs.go:123] Gathering logs for kube-apiserver [a5e12462ba78] ...
I0428 21:49:53.359225   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 a5e12462ba78"
I0428 21:49:53.369164   59661 logs.go:123] Gathering logs for coredns [99aeb807e948] ...
I0428 21:49:53.369168   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 99aeb807e948"
I0428 21:49:53.376373   59661 logs.go:123] Gathering logs for coredns [6f9c2097a3f6] ...
I0428 21:49:53.376375   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 6f9c2097a3f6"
I0428 21:49:53.383370   59661 logs.go:123] Gathering logs for kube-scheduler [e151ddca4b03] ...
I0428 21:49:53.383373   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e151ddca4b03"
I0428 21:49:53.393790   59661 logs.go:123] Gathering logs for kube-proxy [e1dc83c9b2e2] ...
I0428 21:49:53.393793   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 e1dc83c9b2e2"
I0428 21:49:53.403204   59661 logs.go:123] Gathering logs for kube-controller-manager [b6a33796b054] ...
I0428 21:49:53.403207   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 b6a33796b054"
I0428 21:49:53.416541   59661 logs.go:123] Gathering logs for storage-provisioner [d4038b698a41] ...
I0428 21:49:53.416546   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 d4038b698a41"
I0428 21:49:53.424532   59661 logs.go:123] Gathering logs for kubelet ...
I0428 21:49:53.424537   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u kubelet -n 400"
W0428 21:49:53.456070   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:49:53.456143   59661 logs.go:138] Found kubelet problem: Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:49:53.457814   59661 logs.go:123] Gathering logs for Docker ...
I0428 21:49:53.457817   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo journalctl -u docker -u cri-docker -n 400"
I0428 21:49:53.482138   59661 logs.go:123] Gathering logs for describe nodes ...
I0428 21:49:53.482141   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.26.3/kubectl describe nodes --kubeconfig=/var/lib/minikube/kubeconfig"
I0428 21:49:53.518653   59661 logs.go:123] Gathering logs for etcd [0b9e36c63792] ...
I0428 21:49:53.518658   59661 ssh_runner.go:195] Run: /bin/bash -c "docker logs --tail 400 0b9e36c63792"
I0428 21:49:53.528831   59661 logs.go:123] Gathering logs for container status ...
I0428 21:49:53.528834   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo `which crictl || echo crictl` ps -a || sudo docker ps -a"
I0428 21:49:53.538830   59661 logs.go:123] Gathering logs for dmesg ...
I0428 21:49:53.538835   59661 ssh_runner.go:195] Run: /bin/bash -c "sudo dmesg -PH -L=never --level warn,err,crit,alert,emerg | tail -n 400"
I0428 21:49:53.543097   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:49:53.543113   59661 out.go:348] isatty.IsTerminal(2) = true
W0428 21:49:53.543169   59661 out.go:239] ‚ùå  Problems detected in kubelet:
W0428 21:49:53.543179   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
W0428 21:49:53.543185   59661 out.go:239]     Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
I0428 21:49:53.543189   59661 out.go:309] Setting ErrFile to fd 2...
I0428 21:49:53.543193   59661 out.go:348] isatty.IsTerminal(2) = true
I0428 21:50:03.545100   59661 api_server.go:252] Checking apiserver healthz at https://10.0.2.15:8443/healthz ...
I0428 21:50:08.621278   59661 api_server.go:268] stopped: https://10.0.2.15:8443/healthz: Get "https://10.0.2.15:8443/healthz": context deadline exceeded (Client.Timeout exceeded while awaiting headers)
I0428 21:50:08.628735   59661 out.go:177] 
W0428 21:50:08.631745   59661 out.go:239] ‚ùå  Exiting due to GUEST_START: failed to start node: wait 6m0s for node: wait for healthy API server: apiserver healthz never reported healthy: timed out waiting for the condition
W0428 21:50:08.631759   59661 out.go:239] 
W0428 21:50:08.632925   59661 out.go:239] [31m‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ[0m
[31m‚îÇ[0m                                                                                           [31m‚îÇ[0m
[31m‚îÇ[0m    üòø  If the above advice does not help, please let us know:                             [31m‚îÇ[0m
[31m‚îÇ[0m    üëâ  https://github.com/kubernetes/minikube/issues/new/choose                           [31m‚îÇ[0m
[31m‚îÇ[0m                                                                                           [31m‚îÇ[0m
[31m‚îÇ[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m‚îÇ[0m
[31m‚îÇ[0m                                                                                           [31m‚îÇ[0m
[31m‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ[0m
I0428 21:50:08.639635   59661 out.go:177] 

* 
* ==> Docker <==
* -- Journal begins at Sat 2023-04-29 01:20:57 UTC, ends at Sat 2023-04-29 02:47:08 UTC. --
Apr 29 01:45:11 minikube dockerd[19071]: time="2023-04-29T01:45:11.835614943Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:11 minikube dockerd[19071]: time="2023-04-29T01:45:11.835633152Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 29 01:45:11 minikube dockerd[19071]: time="2023-04-29T01:45:11.835648901Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:11 minikube cri-dockerd[20160]: time="2023-04-29T01:45:11Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/459b757597df6068b37b1f974edfa4e5099e2c64fb1631fbd832be7ee3aaafb4/resolv.conf as [nameserver 10.0.2.3]"
Apr 29 01:45:11 minikube dockerd[19071]: time="2023-04-29T01:45:11.975715671Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 29 01:45:11 minikube dockerd[19071]: time="2023-04-29T01:45:11.975750546Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:11 minikube dockerd[19071]: time="2023-04-29T01:45:11.975756796Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 29 01:45:11 minikube dockerd[19071]: time="2023-04-29T01:45:11.975761046Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:11 minikube cri-dockerd[20160]: time="2023-04-29T01:45:11Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/591ce1d5301dfeff20e66cc9eb75221582c035f8ca9f5657a53eb4e56797fb16/resolv.conf as [nameserver 10.0.2.3]"
Apr 29 01:45:11 minikube cri-dockerd[20160]: time="2023-04-29T01:45:11Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/bfe27c090d7f021b40d4043dce552be6f74634eae45d69f89016424f47ed8706/resolv.conf as [nameserver 10.0.2.3]"
Apr 29 01:45:12 minikube cri-dockerd[20160]: time="2023-04-29T01:45:12Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/cef2a7befd96ea08a99a4bd70d6509a2348b7ed64d49075de81e509dbdc03a76/resolv.conf as [nameserver 10.0.2.3]"
Apr 29 01:45:12 minikube dockerd[19071]: time="2023-04-29T01:45:12.067153746Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 29 01:45:12 minikube dockerd[19071]: time="2023-04-29T01:45:12.067184162Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:12 minikube dockerd[19071]: time="2023-04-29T01:45:12.067190579Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 29 01:45:12 minikube dockerd[19071]: time="2023-04-29T01:45:12.067194746Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:12 minikube dockerd[19071]: time="2023-04-29T01:45:12.075066348Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 29 01:45:12 minikube dockerd[19071]: time="2023-04-29T01:45:12.075096932Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:12 minikube dockerd[19071]: time="2023-04-29T01:45:12.075111682Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 29 01:45:12 minikube dockerd[19071]: time="2023-04-29T01:45:12.075119557Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:12 minikube dockerd[19071]: time="2023-04-29T01:45:12.096861829Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 29 01:45:12 minikube dockerd[19071]: time="2023-04-29T01:45:12.096881204Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:12 minikube dockerd[19071]: time="2023-04-29T01:45:12.096887412Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 29 01:45:12 minikube dockerd[19071]: time="2023-04-29T01:45:12.096896204Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:29 minikube dockerd[19071]: time="2023-04-29T01:45:29.066452557Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 29 01:45:29 minikube dockerd[19071]: time="2023-04-29T01:45:29.066482932Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:29 minikube dockerd[19071]: time="2023-04-29T01:45:29.066491349Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 29 01:45:29 minikube dockerd[19071]: time="2023-04-29T01:45:29.066497307Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:29 minikube cri-dockerd[20160]: time="2023-04-29T01:45:29Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/9a766ef6ffa7a5e51df766d6f355905f5066efef71aae3ab0fdaf7d130658080/resolv.conf as [nameserver 10.0.2.3]"
Apr 29 01:45:29 minikube dockerd[19071]: time="2023-04-29T01:45:29.169743000Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 29 01:45:29 minikube dockerd[19071]: time="2023-04-29T01:45:29.169771167Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:29 minikube dockerd[19071]: time="2023-04-29T01:45:29.169779250Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 29 01:45:29 minikube dockerd[19071]: time="2023-04-29T01:45:29.169853708Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:29 minikube dockerd[19071]: time="2023-04-29T01:45:29.974089726Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 29 01:45:29 minikube dockerd[19071]: time="2023-04-29T01:45:29.974123976Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:29 minikube dockerd[19071]: time="2023-04-29T01:45:29.974388892Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 29 01:45:29 minikube dockerd[19071]: time="2023-04-29T01:45:29.974422600Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:30 minikube cri-dockerd[20160]: time="2023-04-29T01:45:30Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/fdba156f437efe1a4ba7a1e4d2d07618d1e2c80c90071a5f5eb55fb0601d76f2/resolv.conf as [nameserver 10.0.2.3]"
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.056852681Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.056882430Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.056891680Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.056898222Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.060662921Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.060685712Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.060694004Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.060711296Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.068174943Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.068208735Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.068218610Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.068226110Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:30 minikube cri-dockerd[20160]: time="2023-04-29T01:45:30Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/49b75e465399e3f223df7aa7bc5e66a1c5a591410869731c75e24390ec4e28c0/resolv.conf as [nameserver 10.0.2.3]"
Apr 29 01:45:30 minikube cri-dockerd[20160]: time="2023-04-29T01:45:30Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/7fd031d2d7a0d7b75e7885597b382c9af9161637db6bb29cc0fcb8d6a7570b5c/resolv.conf as [nameserver 10.0.2.3]"
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.321154130Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.321176922Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.321182922Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.321186880Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.328663445Z" level=info msg="loading plugin \"io.containerd.internal.v1.shutdown\"..." runtime=io.containerd.runc.v2 type=io.containerd.internal.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.328732736Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.pause\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.328758736Z" level=info msg="loading plugin \"io.containerd.event.v1.publisher\"..." runtime=io.containerd.runc.v2 type=io.containerd.event.v1
Apr 29 01:45:30 minikube dockerd[19071]: time="2023-04-29T01:45:30.328779569Z" level=info msg="loading plugin \"io.containerd.ttrpc.v1.task\"..." runtime=io.containerd.runc.v2 type=io.containerd.ttrpc.v1
Apr 29 01:45:36 minikube cri-dockerd[20160]: time="2023-04-29T01:45:36Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"

* 
* ==> container status <==
* CONTAINER           IMAGE               CREATED             STATE               NAME                      ATTEMPT             POD ID
99aeb807e9481       b19406328e70d       About an hour ago   Running             coredns                   0                   49b75e465399e
6f9c2097a3f6a       b19406328e70d       About an hour ago   Running             coredns                   0                   7fd031d2d7a0d
e1dc83c9b2e24       c859f97be11ac       About an hour ago   Running             kube-proxy                0                   fdba156f437ef
d4038b698a411       ba04bb24b9575       About an hour ago   Running             storage-provisioner       0                   9a766ef6ffa7a
a5e12462ba78c       3f1ae10c5c85d       About an hour ago   Running             kube-apiserver            0                   cef2a7befd96e
0b9e36c63792e       ef24580282403       About an hour ago   Running             etcd                      0                   591ce1d5301df
b6a33796b054d       3b6ac91ff8d39       About an hour ago   Running             kube-controller-manager   0                   bfe27c090d7f0
e151ddca4b036       fa167119f9a55       About an hour ago   Running             kube-scheduler            0                   459b757597df6

* 
* ==> coredns [6f9c2097a3f6] <==
* .:53
[INFO] plugin/reload: Running configuration SHA512 = 4369d49e705690634e66dc4876ba448687add67b4e702a1c8bd9cbe26bf81de42209d08c6b52f2167c69004abbe79b233480d7bb5830c218d455f30e7efd3686
CoreDNS-1.9.3
linux/arm64, go1.18.2, 45b0a11
[INFO] 127.0.0.1:56218 - 26395 "HINFO IN 3137328617062683353.4110310819514508706. udp 57 false 512" NXDOMAIN qr,rd,ra 132 0.11350196s

* 
* ==> coredns [99aeb807e948] <==
* .:53
[INFO] plugin/reload: Running configuration SHA512 = 4369d49e705690634e66dc4876ba448687add67b4e702a1c8bd9cbe26bf81de42209d08c6b52f2167c69004abbe79b233480d7bb5830c218d455f30e7efd3686
CoreDNS-1.9.3
linux/arm64, go1.18.2, 45b0a11
[INFO] 127.0.0.1:34219 - 50315 "HINFO IN 4240112777696121796.589017702475631537. udp 56 false 512" NXDOMAIN qr,rd,ra 131 0.113732334s

* 
* ==> describe nodes <==
* Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=arm64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=arm64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=08896fd1dc362c097c925146c4a0d0dac715ace0
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2023_04_28T21_45_15_0700
                    minikube.k8s.io/version=v1.30.1
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Sat, 29 Apr 2023 01:45:13 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Sat, 29 Apr 2023 02:47:08 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Sat, 29 Apr 2023 02:44:11 +0000   Sat, 29 Apr 2023 01:45:12 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Sat, 29 Apr 2023 02:44:11 +0000   Sat, 29 Apr 2023 01:45:12 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Sat, 29 Apr 2023 02:44:11 +0000   Sat, 29 Apr 2023 01:45:12 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Sat, 29 Apr 2023 02:44:11 +0000   Sat, 29 Apr 2023 01:45:14 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  10.0.2.15
  Hostname:    minikube
Capacity:
  cpu:                2
  ephemeral-storage:  17784760Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  hugepages-32Mi:     0
  hugepages-64Ki:     0
  memory:             3905976Ki
  pods:               110
Allocatable:
  cpu:                2
  ephemeral-storage:  17784760Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  hugepages-32Mi:     0
  hugepages-64Ki:     0
  memory:             3905976Ki
  pods:               110
System Info:
  Machine ID:                 b44b369f1261445bae6510d8a820086c
  System UUID:                b44b369f1261445bae6510d8a820086c
  Boot ID:                    62a00f95-af72-4d35-bc55-81341e9c941b
  Kernel Version:             5.10.57
  OS Image:                   Buildroot 2021.02.12
  Operating System:           linux
  Architecture:               arm64
  Container Runtime Version:  docker://20.10.23
  Kubelet Version:            v1.26.3
  Kube-Proxy Version:         v1.26.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (8 in total)
  Namespace                   Name                                CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                ------------  ----------  ---------------  -------------  ---
  kube-system                 coredns-787d4945fb-mgdxj            100m (5%!)(MISSING)     0 (0%!)(MISSING)      70Mi (1%!)(MISSING)        170Mi (4%!)(MISSING)     61m
  kube-system                 coredns-787d4945fb-thgx2            100m (5%!)(MISSING)     0 (0%!)(MISSING)      70Mi (1%!)(MISSING)        170Mi (4%!)(MISSING)     61m
  kube-system                 etcd-minikube                       100m (5%!)(MISSING)     0 (0%!)(MISSING)      100Mi (2%!)(MISSING)       0 (0%!)(MISSING)         61m
  kube-system                 kube-apiserver-minikube             250m (12%!)(MISSING)    0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         61m
  kube-system                 kube-controller-manager-minikube    200m (10%!)(MISSING)    0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         61m
  kube-system                 kube-proxy-ckdt7                    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         61m
  kube-system                 kube-scheduler-minikube             100m (5%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         61m
  kube-system                 storage-provisioner                 0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         61m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                850m (42%!)(MISSING)  0 (0%!)(MISSING)
  memory             240Mi (6%!)(MISSING)  340Mi (8%!)(MISSING)
  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-32Mi     0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-64Ki     0 (0%!)(MISSING)      0 (0%!)(MISSING)
Events:
  Type    Reason                   Age                From             Message
  ----    ------                   ----               ----             -------
  Normal  Starting                 61m                kube-proxy       
  Normal  Starting                 61m                kubelet          Starting kubelet.
  Normal  NodeHasSufficientMemory  61m (x4 over 61m)  kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    61m (x3 over 61m)  kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     61m (x3 over 61m)  kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeAllocatableEnforced  61m                kubelet          Updated Node Allocatable limit across pods
  Normal  Starting                 61m                kubelet          Starting kubelet.
  Normal  NodeAllocatableEnforced  61m                kubelet          Updated Node Allocatable limit across pods
  Normal  NodeHasSufficientMemory  61m                kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    61m                kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     61m                kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  RegisteredNode           61m                node-controller  Node minikube event: Registered Node minikube in Controller

* 
* ==> dmesg <==
* [Apr29 01:33] ACPI: SRAT not present
[  +0.000000] KASLR disabled due to lack of seed
[  +0.710449] EINJ: EINJ table not found.
[  +0.591856] systemd-fstab-generator[114]: Ignoring "noauto" for root device
[  +0.043174] systemd[1]: systemd-journald.service: unit configures an IP firewall, but the local system does not support BPF/cgroup firewalling.
[  +0.000869] systemd[1]: (This warning is only shown for the first unit using IP firewalling.)
[  +8.557237] systemd-fstab-generator[488]: Ignoring "noauto" for root device
[  +0.074628] systemd-fstab-generator[499]: Ignoring "noauto" for root device
[  +2.847198] systemd-fstab-generator[700]: Ignoring "noauto" for root device
[  +1.266578] systemd-fstab-generator[862]: Ignoring "noauto" for root device
[  +0.155565] systemd-fstab-generator[897]: Ignoring "noauto" for root device
[  +0.073377] systemd-fstab-generator[908]: Ignoring "noauto" for root device
[  +0.079784] systemd-fstab-generator[921]: Ignoring "noauto" for root device
[  +1.121478] kauditd_printk_skb: 53 callbacks suppressed
[  +0.073233] systemd-fstab-generator[1068]: Ignoring "noauto" for root device
[  +0.070716] systemd-fstab-generator[1079]: Ignoring "noauto" for root device
[  +0.059394] systemd-fstab-generator[1090]: Ignoring "noauto" for root device
[  +0.075830] systemd-fstab-generator[1101]: Ignoring "noauto" for root device
[  +0.083074] systemd-fstab-generator[1141]: Ignoring "noauto" for root device
[  +2.127810] systemd-fstab-generator[1380]: Ignoring "noauto" for root device
[  +5.604875] systemd-fstab-generator[2316]: Ignoring "noauto" for root device
[Apr29 01:34] kauditd_printk_skb: 49 callbacks suppressed
[Apr29 01:47] kauditd_printk_skb: 23 callbacks suppressed
[Apr29 01:52] systemd-fstab-generator[14432]: Ignoring "noauto" for root device
[  +0.141518] systemd-fstab-generator[14464]: Ignoring "noauto" for root device
[  +0.098885] systemd-fstab-generator[14475]: Ignoring "noauto" for root device
[  +0.100691] systemd-fstab-generator[14488]: Ignoring "noauto" for root device
[ +16.410976] kauditd_printk_skb: 5 callbacks suppressed
[  +0.208618] systemd-fstab-generator[15986]: Ignoring "noauto" for root device
[  +0.079004] systemd-fstab-generator[16040]: Ignoring "noauto" for root device
[  +0.104592] systemd-fstab-generator[16224]: Ignoring "noauto" for root device
[  +0.121576] systemd-fstab-generator[16420]: Ignoring "noauto" for root device
[  +0.189691] systemd-fstab-generator[16497]: Ignoring "noauto" for root device
[Apr29 01:53] systemd-fstab-generator[18242]: Ignoring "noauto" for root device
[  +0.104492] systemd-fstab-generator[18276]: Ignoring "noauto" for root device
[  +0.095348] systemd-fstab-generator[18289]: Ignoring "noauto" for root device
[  +0.095199] systemd-fstab-generator[18303]: Ignoring "noauto" for root device
[  +0.173512] kauditd_printk_skb: 76 callbacks suppressed
[ +16.142398] kauditd_printk_skb: 10 callbacks suppressed
[  +0.214923] systemd-fstab-generator[19458]: Ignoring "noauto" for root device
[  +0.118255] systemd-fstab-generator[19600]: Ignoring "noauto" for root device
[  +0.116090] systemd-fstab-generator[19800]: Ignoring "noauto" for root device
[  +0.131796] systemd-fstab-generator[19955]: Ignoring "noauto" for root device
[  +0.152392] systemd-fstab-generator[20072]: Ignoring "noauto" for root device
[ +15.502334] kauditd_printk_skb: 93 callbacks suppressed
[  +0.647658] systemd-fstab-generator[22344]: Ignoring "noauto" for root device
[Apr29 01:57] systemd-fstab-generator[32345]: Ignoring "noauto" for root device
[  +4.632790] systemd-fstab-generator[33049]: Ignoring "noauto" for root device
[Apr29 01:58] kauditd_printk_skb: 46 callbacks suppressed

* 
* ==> etcd [0b9e36c63792] <==
* {"level":"info","ts":"2023-04-29T01:45:12.228Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft f074a195de705325 [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2023-04-29T01:45:12.228Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 became follower at term 1"}
{"level":"info","ts":"2023-04-29T01:45:12.228Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 switched to configuration voters=(17326651331455243045)"}
{"level":"warn","ts":"2023-04-29T01:45:12.233Z","caller":"auth/store.go:1234","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2023-04-29T01:45:12.234Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2023-04-29T01:45:12.234Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2023-04-29T01:45:12.235Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"f074a195de705325","local-server-version":"3.5.6","cluster-version":"to_be_decided"}
{"level":"info","ts":"2023-04-29T01:45:12.242Z","caller":"etcdserver/server.go:738","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"f074a195de705325","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2023-04-29T01:45:12.242Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2023-04-29T01:45:12.242Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2023-04-29T01:45:12.242Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/minikube/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2023-04-29T01:45:12.242Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 switched to configuration voters=(17326651331455243045)"}
{"level":"info","ts":"2023-04-29T01:45:12.243Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"ef296cf39f5d9d66","local-member-id":"f074a195de705325","added-peer-id":"f074a195de705325","added-peer-peer-urls":["https://10.0.2.15:2380"]}
{"level":"info","ts":"2023-04-29T01:45:12.243Z","caller":"embed/etcd.go:687","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2023-04-29T01:45:12.243Z","caller":"embed/etcd.go:586","msg":"serving peer traffic","address":"10.0.2.15:2380"}
{"level":"info","ts":"2023-04-29T01:45:12.243Z","caller":"embed/etcd.go:558","msg":"cmux::serve","address":"10.0.2.15:2380"}
{"level":"info","ts":"2023-04-29T01:45:12.243Z","caller":"embed/etcd.go:275","msg":"now serving peer/client/metrics","local-member-id":"f074a195de705325","initial-advertise-peer-urls":["https://10.0.2.15:2380"],"listen-peer-urls":["https://10.0.2.15:2380"],"advertise-client-urls":["https://10.0.2.15:2379"],"listen-client-urls":["https://10.0.2.15:2379","https://127.0.0.1:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2023-04-29T01:45:12.243Z","caller":"embed/etcd.go:762","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2023-04-29T01:45:12.828Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 is starting a new election at term 1"}
{"level":"info","ts":"2023-04-29T01:45:12.828Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 became pre-candidate at term 1"}
{"level":"info","ts":"2023-04-29T01:45:12.828Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 received MsgPreVoteResp from f074a195de705325 at term 1"}
{"level":"info","ts":"2023-04-29T01:45:12.828Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 became candidate at term 2"}
{"level":"info","ts":"2023-04-29T01:45:12.828Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 received MsgVoteResp from f074a195de705325 at term 2"}
{"level":"info","ts":"2023-04-29T01:45:12.828Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"f074a195de705325 became leader at term 2"}
{"level":"info","ts":"2023-04-29T01:45:12.828Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: f074a195de705325 elected leader f074a195de705325 at term 2"}
{"level":"info","ts":"2023-04-29T01:45:12.829Z","caller":"etcdserver/server.go:2563","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2023-04-29T01:45:12.830Z","caller":"etcdserver/server.go:2054","msg":"published local member to cluster through raft","local-member-id":"f074a195de705325","local-member-attributes":"{Name:minikube ClientURLs:[https://10.0.2.15:2379]}","request-path":"/0/members/f074a195de705325/attributes","cluster-id":"ef296cf39f5d9d66","publish-timeout":"7s"}
{"level":"info","ts":"2023-04-29T01:45:12.830Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-04-29T01:45:12.830Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"ef296cf39f5d9d66","local-member-id":"f074a195de705325","cluster-version":"3.5"}
{"level":"info","ts":"2023-04-29T01:45:12.830Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2023-04-29T01:45:12.830Z","caller":"etcdserver/server.go:2587","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2023-04-29T01:45:12.831Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"10.0.2.15:2379"}
{"level":"info","ts":"2023-04-29T01:45:12.831Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2023-04-29T01:45:12.831Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2023-04-29T01:45:12.831Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2023-04-29T01:45:12.832Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2023-04-29T02:07:52.779Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":625}
{"level":"info","ts":"2023-04-29T02:07:52.782Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":625,"took":"2.129252ms","hash":2574812183}
{"level":"info","ts":"2023-04-29T02:07:52.782Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":2574812183,"revision":625,"compact-revision":-1}
{"level":"info","ts":"2023-04-29T02:12:52.788Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":864}
{"level":"info","ts":"2023-04-29T02:12:52.789Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":864,"took":"979.976¬µs","hash":3979014037}
{"level":"info","ts":"2023-04-29T02:12:52.790Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":3979014037,"revision":864,"compact-revision":625}
{"level":"info","ts":"2023-04-29T02:17:52.797Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1104}
{"level":"info","ts":"2023-04-29T02:17:52.799Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":1104,"took":"1.212172ms","hash":1440954327}
{"level":"info","ts":"2023-04-29T02:17:52.799Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1440954327,"revision":1104,"compact-revision":864}
{"level":"info","ts":"2023-04-29T02:22:52.805Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1344}
{"level":"info","ts":"2023-04-29T02:22:52.806Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":1344,"took":"1.020057ms","hash":4028448871}
{"level":"info","ts":"2023-04-29T02:22:52.806Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":4028448871,"revision":1344,"compact-revision":1104}
{"level":"info","ts":"2023-04-29T02:27:52.816Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1583}
{"level":"info","ts":"2023-04-29T02:27:52.818Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":1583,"took":"1.100798ms","hash":3176627631}
{"level":"info","ts":"2023-04-29T02:27:52.818Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":3176627631,"revision":1583,"compact-revision":1344}
{"level":"info","ts":"2023-04-29T02:32:52.831Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1824}
{"level":"info","ts":"2023-04-29T02:32:52.833Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":1824,"took":"950.738¬µs","hash":1687490475}
{"level":"info","ts":"2023-04-29T02:32:52.833Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1687490475,"revision":1824,"compact-revision":1583}
{"level":"info","ts":"2023-04-29T02:37:52.841Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2063}
{"level":"info","ts":"2023-04-29T02:37:52.843Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":2063,"took":"870.192¬µs","hash":1110868176}
{"level":"info","ts":"2023-04-29T02:37:52.843Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1110868176,"revision":2063,"compact-revision":1824}
{"level":"info","ts":"2023-04-29T02:42:52.852Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2303}
{"level":"info","ts":"2023-04-29T02:42:52.854Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":2303,"took":"1.041074ms","hash":1218835103}
{"level":"info","ts":"2023-04-29T02:42:52.854Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1218835103,"revision":2303,"compact-revision":2063}

* 
* ==> kernel <==
*  02:47:08 up  1:13,  0 users,  load average: 0.12, 0.30, 0.31
Linux minikube 5.10.57 #1 SMP PREEMPT Mon Apr 3 22:26:25 UTC 2023 aarch64 GNU/Linux
PRETTY_NAME="Buildroot 2021.02.12"

* 
* ==> kube-apiserver [a5e12462ba78] <==
* W0429 01:45:13.163985       1 genericapiserver.go:660] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I0429 01:45:13.469746       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0429 01:45:13.469832       1 secure_serving.go:210] Serving securely on [::]:8443
I0429 01:45:13.469870       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/var/lib/minikube/certs/apiserver.crt::/var/lib/minikube/certs/apiserver.key"
I0429 01:45:13.469870       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0429 01:45:13.469928       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0429 01:45:13.470075       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0429 01:45:13.470085       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0429 01:45:13.470114       1 available_controller.go:494] Starting AvailableConditionController
I0429 01:45:13.470119       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0429 01:45:13.470142       1 autoregister_controller.go:141] Starting autoregister controller
I0429 01:45:13.470146       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0429 01:45:13.470171       1 controller.go:83] Starting OpenAPI AggregationController
I0429 01:45:13.470209       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0429 01:45:13.470707       1 controller.go:121] Starting legacy_token_tracking_controller
I0429 01:45:13.470717       1 shared_informer.go:273] Waiting for caches to sync for configmaps
I0429 01:45:13.470750       1 apf_controller.go:361] Starting API Priority and Fairness config controller
I0429 01:45:13.470895       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0429 01:45:13.470901       1 shared_informer.go:273] Waiting for caches to sync for crd-autoregister
I0429 01:45:13.471287       1 customresource_discovery_controller.go:288] Starting DiscoveryController
I0429 01:45:13.471353       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0429 01:45:13.471455       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0429 01:45:13.471557       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I0429 01:45:13.471564       1 shared_informer.go:273] Waiting for caches to sync for cluster_authentication_trust_controller
I0429 01:45:13.484512       1 controller.go:85] Starting OpenAPI controller
I0429 01:45:13.484535       1 controller.go:85] Starting OpenAPI V3 controller
I0429 01:45:13.484550       1 naming_controller.go:291] Starting NamingConditionController
I0429 01:45:13.484559       1 establishing_controller.go:76] Starting EstablishingController
I0429 01:45:13.484576       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0429 01:45:13.484588       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0429 01:45:13.484605       1 crd_finalizer.go:266] Starting CRDFinalizer
I0429 01:45:13.503524       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0429 01:45:13.503553       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0429 01:45:13.526595       1 controller.go:615] quota admission added evaluator for: namespaces
I0429 01:45:13.571072       1 shared_informer.go:280] Caches are synced for crd-autoregister
I0429 01:45:13.571099       1 cache.go:39] Caches are synced for autoregister controller
I0429 01:45:13.571141       1 apf_controller.go:366] Running API Priority and Fairness config worker
I0429 01:45:13.571166       1 apf_controller.go:369] Running API Priority and Fairness periodic rebalancing process
I0429 01:45:13.571083       1 shared_informer.go:280] Caches are synced for configmaps
I0429 01:45:13.571090       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0429 01:45:13.571095       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0429 01:45:13.571614       1 shared_informer.go:280] Caches are synced for cluster_authentication_trust_controller
I0429 01:45:13.576361       1 controller.go:615] quota admission added evaluator for: leases.coordination.k8s.io
I0429 01:45:13.603552       1 shared_informer.go:280] Caches are synced for node_authorizer
I0429 01:45:14.349905       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I0429 01:45:14.474824       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0429 01:45:14.476233       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0429 01:45:14.476243       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0429 01:45:14.593350       1 controller.go:615] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0429 01:45:14.603512       1 controller.go:615] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0429 01:45:14.630813       1 alloc.go:327] "allocated clusterIPs" service="default/kubernetes" clusterIPs=map[IPv4:10.96.0.1]
W0429 01:45:14.632935       1 lease.go:251] Resetting endpoints for master service "kubernetes" to [10.0.2.15]
I0429 01:45:14.633249       1 controller.go:615] quota admission added evaluator for: endpoints
I0429 01:45:14.634447       1 controller.go:615] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0429 01:45:15.512228       1 controller.go:615] quota admission added evaluator for: serviceaccounts
I0429 01:45:15.842660       1 controller.go:615] quota admission added evaluator for: deployments.apps
I0429 01:45:15.846401       1 alloc.go:327] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs=map[IPv4:10.96.0.10]
I0429 01:45:15.849331       1 controller.go:615] quota admission added evaluator for: daemonsets.apps
I0429 01:45:28.666096       1 controller.go:615] quota admission added evaluator for: replicasets.apps
I0429 01:45:29.315441       1 controller.go:615] quota admission added evaluator for: controllerrevisions.apps

* 
* ==> kube-controller-manager [b6a33796b054] <==
* I0429 01:45:28.641344       1 controllermanager.go:622] Started "csrsigning"
I0429 01:45:28.641399       1 certificate_controller.go:112] Starting certificate controller "csrsigning-legacy-unknown"
I0429 01:45:28.641405       1 shared_informer.go:273] Waiting for caches to sync for certificate-csrsigning-legacy-unknown
I0429 01:45:28.641412       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/var/lib/minikube/certs/ca.crt::/var/lib/minikube/certs/ca.key"
I0429 01:45:28.643830       1 shared_informer.go:273] Waiting for caches to sync for resource quota
W0429 01:45:28.648941       1 actual_state_of_world.go:541] Failed to update statusUpdateNeeded field in actual state of world: Failed to set statusUpdateNeeded to needed true, because nodeName="minikube" does not exist
I0429 01:45:28.654207       1 shared_informer.go:273] Waiting for caches to sync for garbage collector
I0429 01:45:28.662262       1 shared_informer.go:280] Caches are synced for persistent volume
I0429 01:45:28.662296       1 shared_informer.go:280] Caches are synced for deployment
I0429 01:45:28.662541       1 shared_informer.go:280] Caches are synced for disruption
I0429 01:45:28.663099       1 shared_informer.go:280] Caches are synced for cronjob
I0429 01:45:28.663146       1 shared_informer.go:280] Caches are synced for bootstrap_signer
I0429 01:45:28.663103       1 shared_informer.go:280] Caches are synced for PVC protection
I0429 01:45:28.663297       1 shared_informer.go:280] Caches are synced for endpoint
I0429 01:45:28.664258       1 shared_informer.go:280] Caches are synced for PV protection
I0429 01:45:28.668264       1 event.go:294] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-787d4945fb to 2"
I0429 01:45:28.678963       1 shared_informer.go:280] Caches are synced for GC
I0429 01:45:28.712671       1 shared_informer.go:280] Caches are synced for crt configmap
I0429 01:45:28.712697       1 shared_informer.go:280] Caches are synced for HPA
I0429 01:45:28.712692       1 shared_informer.go:280] Caches are synced for ReplicaSet
I0429 01:45:28.713381       1 shared_informer.go:280] Caches are synced for ReplicationController
I0429 01:45:28.714474       1 shared_informer.go:280] Caches are synced for endpoint_slice_mirroring
I0429 01:45:28.714524       1 shared_informer.go:280] Caches are synced for TTL
I0429 01:45:28.716246       1 shared_informer.go:280] Caches are synced for expand
I0429 01:45:28.718787       1 shared_informer.go:280] Caches are synced for node
I0429 01:45:28.718894       1 range_allocator.go:167] Sending events to api server.
I0429 01:45:28.718921       1 range_allocator.go:171] Starting range CIDR allocator
I0429 01:45:28.718938       1 shared_informer.go:273] Waiting for caches to sync for cidrallocator
I0429 01:45:28.718952       1 shared_informer.go:280] Caches are synced for cidrallocator
I0429 01:45:28.721089       1 range_allocator.go:372] Set node minikube PodCIDR to [10.244.0.0/24]
I0429 01:45:28.721114       1 shared_informer.go:280] Caches are synced for ephemeral
I0429 01:45:28.722213       1 shared_informer.go:280] Caches are synced for taint
I0429 01:45:28.722264       1 node_lifecycle_controller.go:1438] Initializing eviction metric for zone: 
W0429 01:45:28.722280       1 node_lifecycle_controller.go:1053] Missing timestamp for Node minikube. Assuming now as a timestamp.
I0429 01:45:28.722315       1 node_lifecycle_controller.go:1254] Controller detected that zone  is now in state Normal.
I0429 01:45:28.722359       1 taint_manager.go:206] "Starting NoExecuteTaintManager"
I0429 01:45:28.722400       1 taint_manager.go:211] "Sending events to api server"
I0429 01:45:28.722481       1 event.go:294] "Event occurred" object="minikube" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node minikube event: Registered Node minikube in Controller"
I0429 01:45:28.722944       1 shared_informer.go:280] Caches are synced for service account
I0429 01:45:28.724109       1 shared_informer.go:280] Caches are synced for TTL after finished
I0429 01:45:28.726985       1 shared_informer.go:280] Caches are synced for endpoint_slice
I0429 01:45:28.729019       1 shared_informer.go:280] Caches are synced for job
I0429 01:45:28.731235       1 shared_informer.go:280] Caches are synced for certificate-csrapproving
I0429 01:45:28.740503       1 shared_informer.go:280] Caches are synced for namespace
I0429 01:45:28.742139       1 shared_informer.go:280] Caches are synced for certificate-csrsigning-legacy-unknown
I0429 01:45:28.742164       1 shared_informer.go:280] Caches are synced for certificate-csrsigning-kube-apiserver-client
I0429 01:45:28.742182       1 shared_informer.go:280] Caches are synced for certificate-csrsigning-kubelet-serving
I0429 01:45:28.742186       1 shared_informer.go:280] Caches are synced for certificate-csrsigning-kubelet-client
I0429 01:45:28.743861       1 shared_informer.go:280] Caches are synced for resource quota
I0429 01:45:28.766782       1 shared_informer.go:280] Caches are synced for resource quota
I0429 01:45:28.768707       1 event.go:294] "Event occurred" object="kube-system/coredns-787d4945fb" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-787d4945fb-mgdxj"
I0429 01:45:28.775171       1 event.go:294] "Event occurred" object="kube-system/coredns-787d4945fb" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-787d4945fb-thgx2"
I0429 01:45:28.813723       1 shared_informer.go:280] Caches are synced for attach detach
I0429 01:45:28.819958       1 shared_informer.go:280] Caches are synced for stateful set
I0429 01:45:28.825263       1 shared_informer.go:280] Caches are synced for daemon sets
I0429 01:45:28.913620       1 shared_informer.go:280] Caches are synced for ClusterRoleAggregator
I0429 01:45:29.254290       1 shared_informer.go:280] Caches are synced for garbage collector
I0429 01:45:29.318752       1 event.go:294] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-ckdt7"
I0429 01:45:29.328375       1 shared_informer.go:280] Caches are synced for garbage collector
I0429 01:45:29.328431       1 garbagecollector.go:163] Garbage collector: all resource monitors have synced. Proceeding to collect garbage

* 
* ==> kube-proxy [e1dc83c9b2e2] <==
* I0429 01:45:30.132398       1 node.go:163] Successfully retrieved node IP: 10.0.2.15
I0429 01:45:30.132420       1 server_others.go:109] "Detected node IP" address="10.0.2.15"
I0429 01:45:30.132436       1 server_others.go:535] "Using iptables proxy"
I0429 01:45:30.145384       1 server_others.go:170] "kube-proxy running in single-stack mode, this ipFamily is not supported" ipFamily=IPv6
I0429 01:45:30.145393       1 server_others.go:176] "Using iptables Proxier"
I0429 01:45:30.145405       1 proxier.go:242] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0429 01:45:30.145543       1 server.go:655] "Version info" version="v1.26.3"
I0429 01:45:30.145553       1 server.go:657] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0429 01:45:30.145930       1 config.go:317] "Starting service config controller"
I0429 01:45:30.145934       1 shared_informer.go:273] Waiting for caches to sync for service config
I0429 01:45:30.145941       1 config.go:226] "Starting endpoint slice config controller"
I0429 01:45:30.145942       1 shared_informer.go:273] Waiting for caches to sync for endpoint slice config
I0429 01:45:30.146080       1 config.go:444] "Starting node config controller"
I0429 01:45:30.146081       1 shared_informer.go:273] Waiting for caches to sync for node config
I0429 01:45:30.246401       1 shared_informer.go:280] Caches are synced for node config
I0429 01:45:30.246401       1 shared_informer.go:280] Caches are synced for service config
I0429 01:45:30.246414       1 shared_informer.go:280] Caches are synced for endpoint slice config

* 
* ==> kube-scheduler [e151ddca4b03] <==
* I0429 01:45:12.360727       1 serving.go:348] Generated self-signed cert in-memory
W0429 01:45:13.521640       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0429 01:45:13.521657       1 authentication.go:349] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0429 01:45:13.521662       1 authentication.go:350] Continuing without authentication configuration. This may treat all requests as anonymous.
W0429 01:45:13.521665       1 authentication.go:351] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0429 01:45:13.528097       1 server.go:152] "Starting Kubernetes Scheduler" version="v1.26.3"
I0429 01:45:13.528109       1 server.go:154] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0429 01:45:13.528772       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259
I0429 01:45:13.528919       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0429 01:45:13.529258       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0429 01:45:13.529493       1 shared_informer.go:273] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
W0429 01:45:13.531575       1 reflector.go:424] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0429 01:45:13.531600       1 reflector.go:140] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0429 01:45:13.531730       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0429 01:45:13.531738       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0429 01:45:13.531757       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0429 01:45:13.531763       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0429 01:45:13.531787       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0429 01:45:13.531791       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0429 01:45:13.531801       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0429 01:45:13.531804       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0429 01:45:13.531815       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0429 01:45:13.531830       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0429 01:45:13.531841       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0429 01:45:13.531844       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0429 01:45:13.531855       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0429 01:45:13.531858       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0429 01:45:13.531868       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0429 01:45:13.531871       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0429 01:45:13.531881       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0429 01:45:13.531887       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0429 01:45:13.531925       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0429 01:45:13.531931       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0429 01:45:13.531942       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0429 01:45:13.531946       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0429 01:45:13.531955       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0429 01:45:13.531958       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0429 01:45:13.531969       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0429 01:45:13.531972       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0429 01:45:13.531982       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0429 01:45:13.531985       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0429 01:45:14.369945       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0429 01:45:14.369970       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0429 01:45:14.422935       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0429 01:45:14.422954       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0429 01:45:14.459060       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0429 01:45:14.459069       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W0429 01:45:14.539020       1 reflector.go:424] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0429 01:45:14.539038       1 reflector.go:140] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
I0429 01:45:14.930072       1 shared_informer.go:280] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file

* 
* ==> kubelet <==
* -- Journal begins at Sat 2023-04-29 01:20:57 UTC, ends at Sat 2023-04-29 02:47:08 UTC. --
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.019817   33055 topology_manager.go:210] "Topology Admit Handler"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.019857   33055 topology_manager.go:210] "Topology Admit Handler"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.019870   33055 topology_manager.go:210] "Topology Admit Handler"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.019880   33055 topology_manager.go:210] "Topology Admit Handler"
Apr 29 01:45:16 minikube kubelet[33055]: E0429 01:45:16.022833   33055 kubelet.go:1802] "Failed creating a mirror pod for" err="pods \"kube-apiserver-minikube\" already exists" pod="kube-system/kube-apiserver-minikube"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.184034   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-data\" (UniqueName: \"kubernetes.io/host-path/b66e5400d627fb8a329212ef9c1f2679-etcd-data\") pod \"etcd-minikube\" (UID: \"b66e5400d627fb8a329212ef9c1f2679\") " pod="kube-system/etcd-minikube"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.184063   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/96f2f6c9bdc88be3938b73d38d286d58-k8s-certs\") pod \"kube-apiserver-minikube\" (UID: \"96f2f6c9bdc88be3938b73d38d286d58\") " pod="kube-system/kube-apiserver-minikube"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.184075   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/96f2f6c9bdc88be3938b73d38d286d58-usr-share-ca-certificates\") pod \"kube-apiserver-minikube\" (UID: \"96f2f6c9bdc88be3938b73d38d286d58\") " pod="kube-system/kube-apiserver-minikube"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.184086   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/52fd999db5ff4014b83a4ad42c06b3b5-ca-certs\") pod \"kube-controller-manager-minikube\" (UID: \"52fd999db5ff4014b83a4ad42c06b3b5\") " pod="kube-system/kube-controller-manager-minikube"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.184094   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"k8s-certs\" (UniqueName: \"kubernetes.io/host-path/52fd999db5ff4014b83a4ad42c06b3b5-k8s-certs\") pod \"kube-controller-manager-minikube\" (UID: \"52fd999db5ff4014b83a4ad42c06b3b5\") " pod="kube-system/kube-controller-manager-minikube"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.184103   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"usr-share-ca-certificates\" (UniqueName: \"kubernetes.io/host-path/52fd999db5ff4014b83a4ad42c06b3b5-usr-share-ca-certificates\") pod \"kube-controller-manager-minikube\" (UID: \"52fd999db5ff4014b83a4ad42c06b3b5\") " pod="kube-system/kube-controller-manager-minikube"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.184111   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/0818f4b1a57de9c3f9c82667e7fcc870-kubeconfig\") pod \"kube-scheduler-minikube\" (UID: \"0818f4b1a57de9c3f9c82667e7fcc870\") " pod="kube-system/kube-scheduler-minikube"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.184122   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"flexvolume-dir\" (UniqueName: \"kubernetes.io/host-path/52fd999db5ff4014b83a4ad42c06b3b5-flexvolume-dir\") pod \"kube-controller-manager-minikube\" (UID: \"52fd999db5ff4014b83a4ad42c06b3b5\") " pod="kube-system/kube-controller-manager-minikube"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.184131   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kubeconfig\" (UniqueName: \"kubernetes.io/host-path/52fd999db5ff4014b83a4ad42c06b3b5-kubeconfig\") pod \"kube-controller-manager-minikube\" (UID: \"52fd999db5ff4014b83a4ad42c06b3b5\") " pod="kube-system/kube-controller-manager-minikube"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.184139   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"etcd-certs\" (UniqueName: \"kubernetes.io/host-path/b66e5400d627fb8a329212ef9c1f2679-etcd-certs\") pod \"etcd-minikube\" (UID: \"b66e5400d627fb8a329212ef9c1f2679\") " pod="kube-system/etcd-minikube"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.184153   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"ca-certs\" (UniqueName: \"kubernetes.io/host-path/96f2f6c9bdc88be3938b73d38d286d58-ca-certs\") pod \"kube-apiserver-minikube\" (UID: \"96f2f6c9bdc88be3938b73d38d286d58\") " pod="kube-system/kube-apiserver-minikube"
Apr 29 01:45:16 minikube kubelet[33055]: I0429 01:45:16.874457   33055 apiserver.go:52] "Watching apiserver"
Apr 29 01:45:17 minikube kubelet[33055]: I0429 01:45:17.082988   33055 desired_state_of_world_populator.go:159] "Finished populating initial desired state of world"
Apr 29 01:45:17 minikube kubelet[33055]: I0429 01:45:17.087154   33055 reconciler.go:41] "Reconciler: start to sync state"
Apr 29 01:45:17 minikube kubelet[33055]: E0429 01:45:17.476460   33055 kubelet.go:1802] "Failed creating a mirror pod for" err="pods \"kube-apiserver-minikube\" already exists" pod="kube-system/kube-apiserver-minikube"
Apr 29 01:45:17 minikube kubelet[33055]: E0429 01:45:17.676064   33055 kubelet.go:1802] "Failed creating a mirror pod for" err="pods \"kube-scheduler-minikube\" already exists" pod="kube-system/kube-scheduler-minikube"
Apr 29 01:45:17 minikube kubelet[33055]: E0429 01:45:17.877161   33055 kubelet.go:1802] "Failed creating a mirror pod for" err="pods \"etcd-minikube\" already exists" pod="kube-system/etcd-minikube"
Apr 29 01:45:18 minikube kubelet[33055]: I0429 01:45:18.073865   33055 request.go:690] Waited for 1.133853429s due to client-side throttling, not priority and fairness, request: POST:https://control-plane.minikube.internal:8443/api/v1/namespaces/kube-system/pods
Apr 29 01:45:18 minikube kubelet[33055]: E0429 01:45:18.076844   33055 kubelet.go:1802] "Failed creating a mirror pod for" err="pods \"kube-controller-manager-minikube\" already exists" pod="kube-system/kube-controller-manager-minikube"
Apr 29 01:45:18 minikube kubelet[33055]: I0429 01:45:18.279007   33055 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-controller-manager-minikube" podStartSLOduration=2.278979308 pod.CreationTimestamp="2023-04-29 01:45:16 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-04-29 01:45:18.278924183 +0000 UTC m=+2.447201225" watchObservedRunningTime="2023-04-29 01:45:18.278979308 +0000 UTC m=+2.447256308"
Apr 29 01:45:19 minikube kubelet[33055]: I0429 01:45:19.079513   33055 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-apiserver-minikube" podStartSLOduration=5.079483416 pod.CreationTimestamp="2023-04-29 01:45:14 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-04-29 01:45:18.677883678 +0000 UTC m=+2.846160719" watchObservedRunningTime="2023-04-29 01:45:19.079483416 +0000 UTC m=+3.247760457"
Apr 29 01:45:20 minikube kubelet[33055]: I0429 01:45:20.278866   33055 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-scheduler-minikube" podStartSLOduration=4.278828413 pod.CreationTimestamp="2023-04-29 01:45:16 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-04-29 01:45:20.278680039 +0000 UTC m=+4.446957122" watchObservedRunningTime="2023-04-29 01:45:20.278828413 +0000 UTC m=+4.447105455"
Apr 29 01:45:21 minikube kubelet[33055]: I0429 01:45:21.078515   33055 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/etcd-minikube" podStartSLOduration=5.078482589 pod.CreationTimestamp="2023-04-29 01:45:16 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-04-29 01:45:20.679491123 +0000 UTC m=+4.847768207" watchObservedRunningTime="2023-04-29 01:45:21.078482589 +0000 UTC m=+5.246759630"
Apr 29 01:45:28 minikube kubelet[33055]: I0429 01:45:28.727579   33055 topology_manager.go:210] "Topology Admit Handler"
Apr 29 01:45:28 minikube kubelet[33055]: I0429 01:45:28.774028   33055 topology_manager.go:210] "Topology Admit Handler"
Apr 29 01:45:28 minikube kubelet[33055]: W0429 01:45:28.774721   33055 reflector.go:424] object-"kube-system"/"coredns": failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
Apr 29 01:45:28 minikube kubelet[33055]: E0429 01:45:28.774737   33055 reflector.go:140] object-"kube-system"/"coredns": Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "coredns" is forbidden: User "system:node:minikube" cannot list resource "configmaps" in API group "" in the namespace "kube-system": no relationship found between node 'minikube' and this object
Apr 29 01:45:28 minikube kubelet[33055]: I0429 01:45:28.778836   33055 topology_manager.go:210] "Topology Admit Handler"
Apr 29 01:45:28 minikube kubelet[33055]: I0429 01:45:28.841600   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"tmp\" (UniqueName: \"kubernetes.io/host-path/af79d5e0-2ad5-4362-b6ab-752f02613893-tmp\") pod \"storage-provisioner\" (UID: \"af79d5e0-2ad5-4362-b6ab-752f02613893\") " pod="kube-system/storage-provisioner"
Apr 29 01:45:28 minikube kubelet[33055]: I0429 01:45:28.841664   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-jwgs7\" (UniqueName: \"kubernetes.io/projected/af79d5e0-2ad5-4362-b6ab-752f02613893-kube-api-access-jwgs7\") pod \"storage-provisioner\" (UID: \"af79d5e0-2ad5-4362-b6ab-752f02613893\") " pod="kube-system/storage-provisioner"
Apr 29 01:45:28 minikube kubelet[33055]: I0429 01:45:28.942242   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/a046b2f7-dd4f-4282-8848-98b0b406ec08-config-volume\") pod \"coredns-787d4945fb-thgx2\" (UID: \"a046b2f7-dd4f-4282-8848-98b0b406ec08\") " pod="kube-system/coredns-787d4945fb-thgx2"
Apr 29 01:45:28 minikube kubelet[33055]: I0429 01:45:28.942340   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-6ndn9\" (UniqueName: \"kubernetes.io/projected/1dc4aaeb-ce02-43a1-871b-1e076636b53c-kube-api-access-6ndn9\") pod \"coredns-787d4945fb-mgdxj\" (UID: \"1dc4aaeb-ce02-43a1-871b-1e076636b53c\") " pod="kube-system/coredns-787d4945fb-mgdxj"
Apr 29 01:45:28 minikube kubelet[33055]: I0429 01:45:28.942375   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"config-volume\" (UniqueName: \"kubernetes.io/configmap/1dc4aaeb-ce02-43a1-871b-1e076636b53c-config-volume\") pod \"coredns-787d4945fb-mgdxj\" (UID: \"1dc4aaeb-ce02-43a1-871b-1e076636b53c\") " pod="kube-system/coredns-787d4945fb-mgdxj"
Apr 29 01:45:28 minikube kubelet[33055]: I0429 01:45:28.942392   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-thl9l\" (UniqueName: \"kubernetes.io/projected/a046b2f7-dd4f-4282-8848-98b0b406ec08-kube-api-access-thl9l\") pod \"coredns-787d4945fb-thgx2\" (UID: \"a046b2f7-dd4f-4282-8848-98b0b406ec08\") " pod="kube-system/coredns-787d4945fb-thgx2"
Apr 29 01:45:29 minikube kubelet[33055]: I0429 01:45:29.320883   33055 topology_manager.go:210] "Topology Admit Handler"
Apr 29 01:45:29 minikube kubelet[33055]: I0429 01:45:29.444907   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"xtables-lock\" (UniqueName: \"kubernetes.io/host-path/6e3f9043-eaf9-4c73-8a31-8e9a539db6b4-xtables-lock\") pod \"kube-proxy-ckdt7\" (UID: \"6e3f9043-eaf9-4c73-8a31-8e9a539db6b4\") " pod="kube-system/kube-proxy-ckdt7"
Apr 29 01:45:29 minikube kubelet[33055]: I0429 01:45:29.444934   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"lib-modules\" (UniqueName: \"kubernetes.io/host-path/6e3f9043-eaf9-4c73-8a31-8e9a539db6b4-lib-modules\") pod \"kube-proxy-ckdt7\" (UID: \"6e3f9043-eaf9-4c73-8a31-8e9a539db6b4\") " pod="kube-system/kube-proxy-ckdt7"
Apr 29 01:45:29 minikube kubelet[33055]: I0429 01:45:29.444952   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-api-access-8nb7x\" (UniqueName: \"kubernetes.io/projected/6e3f9043-eaf9-4c73-8a31-8e9a539db6b4-kube-api-access-8nb7x\") pod \"kube-proxy-ckdt7\" (UID: \"6e3f9043-eaf9-4c73-8a31-8e9a539db6b4\") " pod="kube-system/kube-proxy-ckdt7"
Apr 29 01:45:29 minikube kubelet[33055]: I0429 01:45:29.444968   33055 reconciler_common.go:253] "operationExecutor.VerifyControllerAttachedVolume started for volume \"kube-proxy\" (UniqueName: \"kubernetes.io/configmap/6e3f9043-eaf9-4c73-8a31-8e9a539db6b4-kube-proxy\") pod \"kube-proxy-ckdt7\" (UID: \"6e3f9043-eaf9-4c73-8a31-8e9a539db6b4\") " pod="kube-system/kube-proxy-ckdt7"
Apr 29 01:45:30 minikube kubelet[33055]: I0429 01:45:30.031857   33055 pod_container_deletor.go:80] "Container not found in pod's containers" containerID="fdba156f437efe1a4ba7a1e4d2d07618d1e2c80c90071a5f5eb55fb0601d76f2"
Apr 29 01:45:30 minikube kubelet[33055]: I0429 01:45:30.331870   33055 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/storage-provisioner" podStartSLOduration=14.331849437 pod.CreationTimestamp="2023-04-29 01:45:16 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-04-29 01:45:30.33182352 +0000 UTC m=+14.500100520" watchObservedRunningTime="2023-04-29 01:45:30.331849437 +0000 UTC m=+14.500126478"
Apr 29 01:45:31 minikube kubelet[33055]: I0429 01:45:31.132659   33055 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/coredns-787d4945fb-mgdxj" podStartSLOduration=3.132637226 pod.CreationTimestamp="2023-04-29 01:45:28 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-04-29 01:45:31.055322298 +0000 UTC m=+15.223599339" watchObservedRunningTime="2023-04-29 01:45:31.132637226 +0000 UTC m=+15.300914268"
Apr 29 01:45:31 minikube kubelet[33055]: I0429 01:45:31.934710   33055 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/kube-proxy-ckdt7" podStartSLOduration=2.934654981 pod.CreationTimestamp="2023-04-29 01:45:29 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-04-29 01:45:31.533860791 +0000 UTC m=+15.702137832" watchObservedRunningTime="2023-04-29 01:45:31.934654981 +0000 UTC m=+16.102932023"
Apr 29 01:45:32 minikube kubelet[33055]: I0429 01:45:32.334375   33055 pod_startup_latency_tracker.go:102] "Observed pod startup duration" pod="kube-system/coredns-787d4945fb-thgx2" podStartSLOduration=4.334335596 pod.CreationTimestamp="2023-04-29 01:45:28 +0000 UTC" firstStartedPulling="0001-01-01 00:00:00 +0000 UTC" lastFinishedPulling="0001-01-01 00:00:00 +0000 UTC" observedRunningTime="2023-04-29 01:45:31.937794181 +0000 UTC m=+16.106071223" watchObservedRunningTime="2023-04-29 01:45:32.334335596 +0000 UTC m=+16.502612637"
Apr 29 01:45:36 minikube kubelet[33055]: I0429 01:45:36.476869   33055 kuberuntime_manager.go:1114] "Updating runtime config through cri with podcidr" CIDR="10.244.0.0/24"
Apr 29 01:45:36 minikube kubelet[33055]: I0429 01:45:36.477539   33055 kubelet_network.go:61] "Updating Pod CIDR" originalPodCIDR="" newPodCIDR="10.244.0.0/24"
Apr 29 01:50:15 minikube kubelet[33055]: W0429 01:50:15.905692   33055 machine.go:65] Cannot read vendor id correctly, set empty.
Apr 29 02:07:55 minikube kubelet[33055]: W0429 02:07:55.831423   33055 machine.go:65] Cannot read vendor id correctly, set empty.
Apr 29 02:12:55 minikube kubelet[33055]: W0429 02:12:55.832402   33055 machine.go:65] Cannot read vendor id correctly, set empty.
Apr 29 02:17:55 minikube kubelet[33055]: W0429 02:17:55.831180   33055 machine.go:65] Cannot read vendor id correctly, set empty.
Apr 29 02:22:55 minikube kubelet[33055]: W0429 02:22:55.831884   33055 machine.go:65] Cannot read vendor id correctly, set empty.
Apr 29 02:27:55 minikube kubelet[33055]: W0429 02:27:55.835755   33055 machine.go:65] Cannot read vendor id correctly, set empty.
Apr 29 02:32:55 minikube kubelet[33055]: W0429 02:32:55.831514   33055 machine.go:65] Cannot read vendor id correctly, set empty.
Apr 29 02:37:55 minikube kubelet[33055]: W0429 02:37:55.832143   33055 machine.go:65] Cannot read vendor id correctly, set empty.
Apr 29 02:42:55 minikube kubelet[33055]: W0429 02:42:55.831552   33055 machine.go:65] Cannot read vendor id correctly, set empty.

* 
* ==> storage-provisioner [d4038b698a41] <==
* I0429 01:45:29.195670       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0429 01:45:29.198531       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0429 01:45:29.198745       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0429 01:45:29.200933       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0429 01:45:29.200978       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_ff59d3b2-3216-458b-a3c8-c788f09614aa!
I0429 01:45:29.201169       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"5aec94ed-986c-43e9-8461-ee5a2d3f600e", APIVersion:"v1", ResourceVersion:"352", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_ff59d3b2-3216-458b-a3c8-c788f09614aa became leader
I0429 01:45:29.301891       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_ff59d3b2-3216-458b-a3c8-c788f09614aa!

